<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HoppzBlog</title>
  <icon>https://www.gravatar.com/avatar/e8a3c75629c0c48903f98170a33b1bda</icon>
  <subtitle>~</subtitle>
  <link href="https://hoppz.github.io/atom.xml" rel="self"/>
  
  <link href="https://hoppz.github.io/"/>
  <updated>2021-08-03T06:08:51.162Z</updated>
  <id>https://hoppz.github.io/</id>
  
  <author>
    <name>Hoppz</name>
    <email>Hoppz520@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hoppz.github.io/2021/08/03/hello-world/"/>
    <id>https://hoppz.github.io/2021/08/03/hello-world/</id>
    <published>2021-08-03T06:08:51.162Z</published>
    <updated>2021-08-03T06:08:51.162Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>补题</title>
    <link href="https://hoppz.github.io/2020/12/10/%E8%A1%A5%E9%A2%98/"/>
    <id>https://hoppz.github.io/2020/12/10/%E8%A1%A5%E9%A2%98/</id>
    <published>2020-12-09T16:00:00.000Z</published>
    <updated>2021-08-03T11:48:28.977Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p><a href="https://www.notion.so/dda8ee55f6754ec483c495ef2941d64d">蓝桥杯准备</a></p><p>[toc]</p><h1 id="2020CCPC绵阳-K-Knowledge-is-Power"><a href="#2020CCPC绵阳-K-Knowledge-is-Power" class="headerlink" title="2020CCPC绵阳 K- Knowledge is Power"></a>2020CCPC绵阳 K- Knowledge is Power</h1><p>①如果x是奇数，那么拆分为x/2和x-x/2，答案是1</p><p>②如果x是偶数并且x/2是偶数，，那么可以分成x/2+1，x/2-1这是分成了两个奇数，一定互质，答案是2</p><p>③如果x是偶数并且x/2是奇数，那么我们对x取余3进行判断。</p><p>如果是3的倍数，比如42，可以拆成13 14 15.那么答案是2</p><p>如果取模3后余1，比如70 可以分成22 23 25 答案是3</p><p>取模3余2，比如62 可以分成19 21 22 答案是3</p><p>按照上面构造方式 判断一下是不是两两互质即可</p><p>容易发现答案最多为4，因为如果x是偶数，x/2是奇数，那么只需要拆分为x/2-2、x/2+2即可</p><p>④注意特判x=6时候无解</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i = i +<span class="number">2</span> )&#123;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        temp = i;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(temp == <span class="number">6</span>)&#123;</span><br><span class="line">             cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;: &quot;</span>&lt;&lt; <span class="number">-1</span> &lt;&lt;endl;</span><br><span class="line">             <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(temp %<span class="number">2</span> != <span class="number">0</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;: &quot;</span>&lt;&lt; <span class="number">1</span> &lt;&lt;endl;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> a = temp / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> b,c;</span><br><span class="line">            <span class="keyword">if</span>(temp % <span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;: &quot;</span>&lt;&lt; <span class="number">2</span> &lt;&lt;endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;: &quot;</span>&lt;&lt; <span class="number">2</span> &lt;&lt;endl;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>( temp % <span class="number">3</span> == <span class="number">1</span> )&#123;</span><br><span class="line">                a = temp/<span class="number">3</span>;     b = a - <span class="number">1</span>;  c = a + <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(__gcd(a,b)==<span class="number">1</span> &amp;&amp; __gcd(a,c)==<span class="number">1</span> &amp;&amp; __gcd(c,b)==<span class="number">1</span> )&#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;: &quot;</span>&lt;&lt; <span class="number">3</span> &lt;&lt;endl;</span><br><span class="line">                    <span class="comment">//cout &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b &lt;&lt; &quot; &quot; &lt;&lt; c &lt;&lt; endl;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>    cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;: &quot;</span>&lt;&lt; <span class="number">4</span> &lt;&lt;endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(temp % <span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                a = temp/<span class="number">3</span> - <span class="number">1</span>;     b = a + <span class="number">2</span>;  c = a + <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">if</span>(__gcd(a,b)==<span class="number">1</span> &amp;&amp; __gcd(a,c)==<span class="number">1</span> &amp;&amp; __gcd(c,b)==<span class="number">1</span> )&#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;: &quot;</span>&lt;&lt; <span class="number">3</span> &lt;&lt;endl;</span><br><span class="line">                    <span class="comment">//cout &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b &lt;&lt; &quot; &quot; &lt;&lt; c &lt;&lt; endl;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>    cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;: &quot;</span>&lt;&lt; <span class="number">4</span> &lt;&lt;endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="acwing-八重码"><a href="#acwing-八重码" class="headerlink" title="acwing 八重码"></a>acwing 八重码</h1><p>此题为 bfs + hash表</p><p>重点是在<strong>3x3数组的状态枚举</strong></p><p>以及<strong>二维数组，如何一维操作</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(string start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    string End = <span class="string">&quot;12345678x&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    queue&lt;string&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(start);</span><br><span class="line">    unordered_map&lt;string,<span class="keyword">int</span>&gt; d;    <span class="comment">///把二维数组，变为一维，在用字符串的形式压入队列</span></span><br><span class="line">    d[start] = <span class="number">0</span>;                   <span class="comment">///初始化状态的变换次数为0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> dy[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>( !q.<span class="built_in">empty</span>() )&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>( t == End) <span class="keyword">return</span> d[t];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> dis =d[t];</span><br><span class="line">        <span class="keyword">int</span> loc = t.<span class="built_in">find</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">        **<span class="keyword">int</span> x = loc / <span class="number">3</span>, y = loc % <span class="number">3</span>;**       <span class="comment">///将一维数组，转换为二维坐标</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i  = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> tx = x + dx[i];</span><br><span class="line">            <span class="keyword">int</span> ty = y + dy[i];</span><br><span class="line">            <span class="keyword">if</span>( tx &gt;= <span class="number">0</span> &amp;&amp; ty &lt; <span class="number">3</span> &amp;&amp; tx &lt; <span class="number">3</span> &amp;&amp; ty &gt;=<span class="number">0</span> )&#123;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">swap</span>(t[loc] , t[**tx*<span class="number">3</span> + ty**]);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>( !d.<span class="built_in">count</span>(t) )&#123;</span><br><span class="line">                    </span><br><span class="line">                    d[t] = dis + <span class="number">1</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(t);</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">swap</span>(t[loc] , t[**tx*<span class="number">3</span> + ty**]);    <span class="comment">///讲状态变回去，方便其他状态的枚举</span></span><br><span class="line">            &#125;</span><br><span class="line">                </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string start;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">9</span>; i ++)&#123;</span><br><span class="line">        <span class="keyword">char</span> a ;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        start += a;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="built_in">bfs</span>(start) &lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/lytwy123/article/details/83419593?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160592898119724836756296%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=160592898119724836756296&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-83419593.pc_search_result_no_baidu_js&utm_term=%E6%A0%A1%E9%97%A8%E5%A4%96%E7%9A%84%E6%95%B0&spm=1018.2118.3001.4449">https://blog.csdn.net/lytwy123/article/details/83419593?ops_request_misc=%7B%22request%5Fid%22%3A%22160592898119724836756296%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=160592898119724836756296&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<del>all</del>top_click~default-1-83419593.pc_search_result_no_baidu_js&amp;utm_term=校门外的数&amp;spm=1018.2118.3001.4449</a></p><h1 id="待补算法"><a href="#待补算法" class="headerlink" title="待补算法:"></a>待补算法:</h1><h1 id="1-模拟退火"><a href="#1-模拟退火" class="headerlink" title="1____模拟退火"></a>1____模拟退火</h1><h3 id="星星还是树"><a href="#星星还是树" class="headerlink" title="星星还是树"></a><a href="https://www.acwing.com/problem/content/3170/">星星还是树</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">&#125;p[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun</span><span class="params">(Point tep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> teans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        teans += <span class="built_in">hypot</span>( tep.x - p[i].x , tep.y - p[i].y );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> teans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> T = <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">double</span> delta = <span class="number">0.97</span>;</span><br><span class="line">    Point nowp;</span><br><span class="line">    nowp.x = <span class="number">5000</span>,nowp.y = <span class="number">5000</span>;</span><br><span class="line">    <span class="keyword">double</span> now = <span class="built_in">fun</span>(nowp);</span><br><span class="line">    <span class="keyword">double</span> ans = now;</span><br><span class="line">    <span class="keyword">while</span>( T &gt; eps )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f[<span class="number">2</span>] = &#123;<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">        Point newp = &#123;nowp.x + f[<span class="built_in">rand</span>()%<span class="number">2</span>] * T , nowp.y + f[<span class="built_in">rand</span>()%<span class="number">2</span>] * T &#125;;</span><br><span class="line">        <span class="keyword">if</span>( newp.x &gt;= <span class="number">0</span> &amp;&amp; newp.x &lt;= <span class="number">10000</span> &amp;&amp; newp.y &gt;= <span class="number">0</span> &amp;&amp; newp.y &lt;= <span class="number">10000</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> next = <span class="built_in">fun</span>(newp);</span><br><span class="line">            <span class="comment">// printf(&quot;%.4lf   %.4lf    %.4lf\n&quot;,ans,newx,next);</span></span><br><span class="line">            ans = <span class="built_in">min</span>(ans,next);</span><br><span class="line">            <span class="keyword">if</span>( now - next  &gt; eps) &#123; nowp = newp , now = next; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        T *= delta;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>((<span class="keyword">unsigned</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>,&amp;p[i].x ,&amp;p[i].y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> an = <span class="built_in">solve</span>();</span><br><span class="line">    an +=<span class="number">0.5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(<span class="keyword">int</span>)an );</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通电围栏"><a href="#通电围栏" class="headerlink" title="通电围栏"></a><a href="https://www.acwing.com/problem/content/description/1422/">通电围栏</a></h3><p>这两个都是可<code>三分</code>可<code>退火</code></p><h3 id="Strange-fuction"><a href="#Strange-fuction" class="headerlink" title="Strange fuction"></a><a href="https://vjudge.net/problem/HDU-2899">Strange fuction</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> y;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">6</span>*<span class="built_in">pow</span>(x,<span class="number">7.0</span>) + <span class="number">8</span> * <span class="built_in">pow</span>(x,<span class="number">6.0</span>) + <span class="number">7</span> * <span class="built_in">pow</span>(x , <span class="number">3.0</span>) + <span class="number">5</span> * <span class="built_in">pow</span>(x , <span class="number">2.0</span>) - y * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> T = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">double</span> delta = <span class="number">0.98</span>;</span><br><span class="line">    <span class="keyword">double</span> x = <span class="number">50.0</span>;</span><br><span class="line">    <span class="keyword">double</span> now = <span class="built_in">fun</span>(x);</span><br><span class="line">    <span class="keyword">double</span> ans = now;</span><br><span class="line">    <span class="keyword">while</span>( T &gt; eps )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> f[<span class="number">2</span>] = &#123;<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">        <span class="keyword">double</span> newx = x + f[<span class="built_in">rand</span>()%<span class="number">2</span>] * T;</span><br><span class="line">        <span class="keyword">if</span>( newx &gt;= <span class="number">0</span> &amp;&amp; newx &lt;= <span class="number">100</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> next = <span class="built_in">fun</span>(newx);</span><br><span class="line">            <span class="comment">// printf(&quot;%.4lf   %.4lf    %.4lf\n&quot;,ans,newx,next);</span></span><br><span class="line">            ans = <span class="built_in">min</span>(ans,next);</span><br><span class="line">            <span class="keyword">if</span>( now - next  &gt; eps) &#123; x = newx , now = next; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        T *= delta;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cas;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;cas);</span><br><span class="line">    <span class="keyword">while</span>(cas--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.4lf\n&quot;</span>,<span class="built_in">solve</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://vjudge.net/problem/HDU-3932">Groundhog Build Home</a>(最小圆覆盖)</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-字符串"><a href="#2-字符串" class="headerlink" title="2____字符串"></a>2____字符串</h1><h2 id="2-1-KMP"><a href="#2-1-KMP" class="headerlink" title="2.1____KMP"></a>2.1____KMP</h2><h3 id="Censor—训练赛2015四川省赛"><a href="#Censor—训练赛2015四川省赛" class="headerlink" title="Censor—训练赛2015四川省赛"></a><a href="https://vjudge.net/contest/417844#problem/C">Censor</a>—训练赛2015四川省赛</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5000005</span>;</span><br><span class="line"><span class="keyword">char</span> p[maxn],s[maxn];</span><br><span class="line"><span class="keyword">int</span> ne[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span> , j = <span class="number">0</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>( j &amp;&amp; p[i] != p[j + <span class="number">1</span>] ) j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>( p[i] == p[j + <span class="number">1</span>] ) j++;</span><br><span class="line">        ne[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KMP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    stack&lt;<span class="keyword">char</span>&gt; ans;</span><br><span class="line">    stack&lt;<span class="keyword">int</span>&gt; pos;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= m ; i++ )&#123;</span><br><span class="line">        <span class="keyword">while</span>( j &amp;&amp; s[i] != p[j + <span class="number">1</span>] ) j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>( s[i] == p[j + <span class="number">1</span>] ) j++;</span><br><span class="line"></span><br><span class="line">        pos.<span class="built_in">push</span>( j );</span><br><span class="line">        ans.<span class="built_in">push</span>(s[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( j == n )&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">0</span> ; l &lt; n ; l ++) &#123;pos.<span class="built_in">pop</span>(),ans.<span class="built_in">pop</span>();&#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( pos.<span class="built_in">empty</span>() ) j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> j = pos.<span class="built_in">top</span>();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="keyword">char</span>&gt; an;</span><br><span class="line">    <span class="keyword">while</span>( !ans.<span class="built_in">empty</span>() )&#123;</span><br><span class="line">        an.<span class="built_in">push_back</span>( ans.<span class="built_in">top</span>() );</span><br><span class="line">        ans.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = an.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span> ; i--)&#123;</span><br><span class="line">        cout &lt;&lt; an[i] ;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>( cin &gt;&gt; p + <span class="number">1</span> &gt;&gt; s + <span class="number">1</span> )&#123;</span><br><span class="line">        n = <span class="built_in">strlen</span>( p + <span class="number">1</span> );</span><br><span class="line">        m = <span class="built_in">strlen</span>( s + <span class="number">1</span> );</span><br><span class="line">        <span class="built_in">memset</span>(ne,<span class="number">0</span>,<span class="keyword">sizeof</span> ne);</span><br><span class="line">        <span class="built_in">get_next</span>();</span><br><span class="line">        <span class="built_in">KMP</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="剪花布条"><a href="#剪花布条" class="headerlink" title="剪花布条"></a><a href="https://vjudge.net/problem/HDU-2087">剪花布条</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> p[<span class="number">1005</span>],s[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> ne[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>, j = <span class="number">0</span> ; i &lt;= n ; i ++)&#123;</span><br><span class="line">        <span class="keyword">while</span>( j &amp;&amp; p[i] != p[j + <span class="number">1</span>] ) j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>(p[i] == p[j + <span class="number">1</span>]) j ++;</span><br><span class="line"></span><br><span class="line">        ne[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KMP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span> ; i &lt;= m ; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>( j &amp;&amp; s[i] != p[j + <span class="number">1</span>] ) j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>( s[i] == p[j + <span class="number">1</span> ] ) j ++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( j == n )&#123;</span><br><span class="line">            cnt ++;</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//cout &lt;&lt;i &lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; s + <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>( s[<span class="number">1</span>] == <span class="string">&#x27;#&#x27;</span> ) <span class="keyword">break</span>;</span><br><span class="line">        cin &gt;&gt; p + <span class="number">1</span>;</span><br><span class="line">        n = <span class="built_in">strlen</span>( p + <span class="number">1</span> );</span><br><span class="line">        m = <span class="built_in">strlen</span>( s + <span class="number">1</span> );</span><br><span class="line">        <span class="built_in">get_next</span>();</span><br><span class="line">        <span class="built_in">KMP</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Number-Sequence"><a href="#Number-Sequence" class="headerlink" title="Number Sequence"></a><a href="https://vjudge.net/problem/HDU-1711">Number Sequence</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1000004</span>;</span><br><span class="line"><span class="keyword">int</span> p[maxn],s[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> ne[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span> ,j = <span class="number">0</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>( j &amp;&amp; p[i] != p[j + <span class="number">1</span>] ) j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>( p[i] == p[j + <span class="number">1</span>] )  j++;</span><br><span class="line"></span><br><span class="line">        ne[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KMP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span> ; i &lt;= m ; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>( j &amp;&amp; s[i] != p[j + <span class="number">1</span>] ) j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>( s[i] == p[j + <span class="number">1</span>] ) j ++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( j == n )&#123;</span><br><span class="line">            cout &lt;&lt; i - n  + <span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!flag)   cout &lt;&lt; <span class="number">-1</span> &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>( t --)&#123;</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m ; i++)    cin &gt;&gt; s[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)    cin &gt;&gt; p[i];</span><br><span class="line">        <span class="built_in">memset</span>(ne ,<span class="number">0</span> , <span class="keyword">sizeof</span> ne);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">get_next</span>();</span><br><span class="line">        <span class="built_in">KMP</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Substrings-Substrings-HDU-1238-Virtual-Judge-vjudge-net"><a href="#Substrings-Substrings-HDU-1238-Virtual-Judge-vjudge-net" class="headerlink" title="[Substrings](Substrings - HDU 1238 - Virtual Judge (vjudge.net))"></a>[Substrings](<a href="https://vjudge.net/problem/HDU-1238">Substrings - HDU 1238 - Virtual Judge (vjudge.net)</a>)</h3><blockquote><p>KMP做法</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> ne[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> en[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">(string p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(ne,<span class="number">0</span>,<span class="keyword">sizeof</span> ne);</span><br><span class="line">    <span class="keyword">int</span> len = p.<span class="built_in">length</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span> , j = <span class="number">-1</span> ;</span><br><span class="line">    ne[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len)&#123;</span><br><span class="line">        <span class="keyword">if</span>(~j &amp;&amp; p[i] != p[j]) j = ne[j];</span><br><span class="line">        <span class="keyword">else</span> ne[++i] = ++j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_enxt</span><span class="params">(string p )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(en,<span class="number">0</span>,<span class="keyword">sizeof</span> en);</span><br><span class="line">    <span class="keyword">int</span> len = p.<span class="built_in">length</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span> , j = <span class="number">-1</span> ;</span><br><span class="line">    en[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len)&#123;</span><br><span class="line">        <span class="keyword">if</span>(~j &amp;&amp; p[i] != p[j]) j = en[j];</span><br><span class="line">        <span class="keyword">else</span> en[++i] = ++j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">kmp</span><span class="params">(string p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">get_next</span>(p);</span><br><span class="line">    string rs = p;</span><br><span class="line">    <span class="built_in">reverse</span>(rs.<span class="built_in">begin</span>(),rs.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">get_enxt</span>(rs);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> le = p.<span class="built_in">length</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; n ; k++)&#123;</span><br><span class="line">        <span class="comment">///</span></span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span> ,j=<span class="number">0</span>,len = s[i].<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">bool</span> fla = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(i &lt; len )&#123;</span><br><span class="line">            <span class="keyword">if</span>( ~j &amp;&amp; s[k][i] != p[j] ) j = ne[j];</span><br><span class="line">            <span class="keyword">else</span> i++,j++;</span><br><span class="line">            <span class="keyword">if</span>(j &gt;= le)&#123;</span><br><span class="line">                fla = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!fla)&#123;</span><br><span class="line">            i = <span class="number">0</span> , j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(i &lt; len )&#123;</span><br><span class="line">                <span class="keyword">if</span>( ~j &amp;&amp; s[k][i] != rs[j] ) j = en[j];</span><br><span class="line">                <span class="keyword">else</span> i++,j++;</span><br><span class="line">                <span class="keyword">if</span>(j &gt;= le)&#123;</span><br><span class="line">                    fla = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( !fla ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>  t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;  i &lt; n;  i++)&#123;</span><br><span class="line">            cin &gt;&gt; s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> len = s[<span class="number">0</span>].<span class="built_in">length</span>(),ans = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">///get the substirng of front string</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; len ;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j + i - <span class="number">1</span> &lt; len ; j++)&#123;</span><br><span class="line">                string te =  s[<span class="number">0</span>].<span class="built_in">substr</span>(i,j);</span><br><span class="line">                <span class="keyword">if</span>( <span class="built_in">kmp</span>(te) )&#123;</span><br><span class="line">                    ans = <span class="built_in">max</span>(ans, (<span class="keyword">int</span>)te.<span class="built_in">length</span>());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; ans &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>STL做法</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">check</span><span class="params">(string p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string et = p;</span><br><span class="line">    <span class="built_in">reverse</span>(et.<span class="built_in">begin</span>(),et.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n ;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>( s[i].<span class="built_in">find</span>( et ) != string::npos || s[i].<span class="built_in">find</span>( p ) != string::npos)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;cin &gt;&gt; s[i];&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> len = s[<span class="number">0</span>].<span class="built_in">length</span>(),ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; i + j - <span class="number">1</span> &lt; len ; j++)&#123;</span><br><span class="line">                string te = s[<span class="number">0</span>].<span class="built_in">substr</span>(i,j);</span><br><span class="line">                <span class="keyword">if</span>( <span class="built_in">check</span>(te) )&#123;</span><br><span class="line">                    ans = <span class="built_in">max</span>(ans, (<span class="keyword">int</span>)te.<span class="built_in">length</span>());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-2-kmp-amp-前缀的周期性"><a href="#2-2-kmp-amp-前缀的周期性" class="headerlink" title="2.2____kmp&amp;前缀的周期性"></a>2.2____kmp&amp;前缀的周期性</h2><h3 id="Period"><a href="#Period" class="headerlink" title="Period"></a><a href="https://vjudge.net/problem/HDU-1358">Period</a></h3><p><strong><a href="https://blog.csdn.net/hao_zong_yin/article/details/77455285">KMP最小循环节、循环周期</a>：</strong></p><p><strong>定理：</strong>假设S的长度为len，则S存在最小循环节，循环节的长度L为len-next[len]，子串为S[0…len-next[len]-1]。</p><p>（1）如果len可以被len - next[len]整除，则表明字符串S可以完全由循环节循环组成，循环周期T=len/L。</p><p>（2）如果不能，说明还需要再添加几个字母才能补全。需要补的个数是循环个数L-len%L=L-(len-L)%L=L-next[len]%L，L=len-next[len]。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> p[maxn];</span><br><span class="line"><span class="keyword">int</span> ne[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>, j = <span class="number">0</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>( j &amp;&amp; p[i] != p[j + <span class="number">1</span>] ) j = ne[j];</span><br><span class="line">        <span class="keyword">if</span>( p[i] == p[j + <span class="number">1</span>]) j++;</span><br><span class="line"></span><br><span class="line">        ne[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    for(int i = 1; i &lt;= n ; i++)&#123;</span></span><br><span class="line"><span class="comment">//        cout &lt;&lt; ne[i] &lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)    cin &gt;&gt; p[i];</span><br><span class="line">        <span class="built_in">memset</span>(ne,<span class="number">0</span>,<span class="keyword">sizeof</span> ne);</span><br><span class="line">        <span class="built_in">get_next</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Test case #%d\n&quot;</span>,cnt++);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> tmp = i + <span class="number">1</span> - ne[i + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>( (i + <span class="number">1</span> ) % tmp == <span class="number">0</span> &amp;&amp; (i + <span class="number">1</span>) / tmp  &gt; <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i+<span class="number">1</span>,(i+<span class="number">1</span>)/tmp);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Seek-the-Name-Seek-the-Fame"><a href="#Seek-the-Name-Seek-the-Fame" class="headerlink" title="Seek the Name, Seek the Fame"></a><a href="https://vjudge.net/problem/POJ-2752">Seek the Name, Seek the Fame</a></h3><h3 id="Blue-Jeans"><a href="#Blue-Jeans" class="headerlink" title="Blue Jeans"></a><a href="https://vjudge.net/problem/POJ-3080">Blue Jeans</a></h3><h2 id="2-4-字符串Hash"><a href="#2-4-字符串Hash" class="headerlink" title="2.4____字符串Hash"></a>2.4____字符串Hash</h2><h3 id="Number-Sequence-1"><a href="#Number-Sequence-1" class="headerlink" title="Number Sequence"></a>Number Sequence</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> ull N =  <span class="number">1000010</span> ,M = <span class="number">131</span>;</span><br><span class="line">ull s[N],sp[N];</span><br><span class="line">ull h[N],p[N];</span><br><span class="line">ull hp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ull <span class="title">get_hash</span><span class="params">(ull l , ull r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h[r] - h[l - <span class="number">1</span>] * p[ r - l ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n,m,t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;  i &lt; n ; i++)&#123;cin &gt;&gt; s[i];&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;  i &lt; m ; i++)&#123;cin &gt;&gt; sp[i];&#125;</span><br><span class="line"></span><br><span class="line">        h[<span class="number">0</span>] = s[<span class="number">0</span>];</span><br><span class="line">        p[<span class="number">0</span>] = <span class="number">131</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;  i &lt; n ; i++)&#123;</span><br><span class="line">            h[i] = h[i - <span class="number">1</span>] * M + s[i];</span><br><span class="line">            p[i] = p[i - <span class="number">1</span>] * M;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        hp = sp[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m ; i++) hp = hp*M + sp[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt;= n - m ; i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">get_hash</span>(i,i+m<span class="number">-1</span>) == hp )&#123;</span><br><span class="line">                flag = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( flag == <span class="number">-1</span>  )   cout &lt;&lt; <span class="number">-1</span> &lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; flag + <span class="number">1</span> &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Censor"><a href="#Censor" class="headerlink" title="Censor"></a>Censor</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**   stack做法  **/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> ull N = <span class="number">5000010</span>, M = <span class="number">131</span>;</span><br><span class="line"></span><br><span class="line">string s,t;</span><br><span class="line"><span class="keyword">char</span> ans[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; t)&#123;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        ull len1 = s.<span class="built_in">length</span>() , len2 = t.<span class="built_in">length</span>();</span><br><span class="line">        ull hp = t[<span class="number">0</span>],bas = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;  i &lt;= len2 ; i++) bas = bas*M;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; len2 ; i++) hp = hp * M + t[i];</span><br><span class="line"></span><br><span class="line">        stack&lt;ull&gt; sta;</span><br><span class="line"></span><br><span class="line">        ull cnt = <span class="number">0</span> , cur = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; len1;  i++)&#123;</span><br><span class="line">            cur = cur * M + s[i];</span><br><span class="line">            ans[cnt] = s[i];</span><br><span class="line">            <span class="keyword">if</span>( cnt &gt;= len2 - <span class="number">1</span> )&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(cnt &gt;= len2)&#123;</span><br><span class="line">                    cur = cur - ans[ cnt - len2 ] * bas;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                sta.<span class="built_in">push</span>(cur);</span><br><span class="line">                <span class="keyword">if</span>( cur == hp )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; len2 ; j++)&#123;</span><br><span class="line">                        sta.<span class="built_in">pop</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                    cnt -= len2;</span><br><span class="line">                    <span class="keyword">if</span>( sta.<span class="built_in">empty</span>() )   cur = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">else</span>    cur = sta.<span class="built_in">top</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>    sta.<span class="built_in">push</span>(cur);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span> ; i &lt; cnt;i++)&#123;</span><br><span class="line">            cout &lt;&lt; ans[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">abc</span></span><br><span class="line"><span class="comment">aaabcbc</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="剪花布条-lt-stl删除做法-gt"><a href="#剪花布条-lt-stl删除做法-gt" class="headerlink" title="剪花布条&lt;stl删除做法&gt;"></a>剪花布条&lt;stl删除做法&gt;</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5010</span>, M = <span class="number">131</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ull hp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    string s,e;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt;s)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(s == <span class="string">&quot;#&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line">        cin &gt;&gt;e;</span><br><span class="line"></span><br><span class="line">        hp = e[<span class="number">0</span>];</span><br><span class="line">        ll len1 = s.<span class="built_in">length</span>() , len2 = e.<span class="built_in">length</span>(),teans = <span class="number">0</span>;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; len2 ; i++) hp = hp * M + e[i];</span><br><span class="line"></span><br><span class="line">        ll loc = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( <span class="literal">true</span> )&#123;</span><br><span class="line">            <span class="keyword">if</span>( len1 &lt; len2 ) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>( loc + len2 &gt; len1 ) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>( s.<span class="built_in">empty</span>() ) <span class="keyword">break</span>;</span><br><span class="line">            ull tep = s[loc];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = loc ; i &lt; loc +  len2 ; i++)&#123;</span><br><span class="line">                tep = tep*M + s[i];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// cout &lt;&lt; tep &lt;&lt; &#x27; &#x27; &lt;&lt; hp &lt;&lt; endl;</span></span><br><span class="line">            <span class="keyword">if</span>( tep == hp )&#123;</span><br><span class="line">                    teans ++;</span><br><span class="line">                s.<span class="built_in">erase</span>(loc, len2);</span><br><span class="line">                <span class="keyword">if</span>( loc - len2 + <span class="number">1</span> &gt;= <span class="number">0</span> ) loc = loc - len2 + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> loc = <span class="number">0</span>;</span><br><span class="line">                len1 -= len2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> loc++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; teans &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Power-Strings"><a href="#Power-Strings" class="headerlink" title="Power Strings"></a><a href="(https://vjudge.net/problem/POJ-2406/origin)">Power Strings</a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000010</span>,M = <span class="number">131</span>;</span><br><span class="line"></span><br><span class="line">ull h[N],p[N];</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ull <span class="title">get_hash</span><span class="params">(ull l ,ull r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> h[r] - h[l - <span class="number">1</span>]*p[r - l];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( s == <span class="string">&quot;.&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> len = s.<span class="built_in">length</span>();</span><br><span class="line"></span><br><span class="line">        h[<span class="number">0</span>] = s[<span class="number">0</span>];</span><br><span class="line">        p[<span class="number">0</span>] = <span class="number">131</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; len ; i++)&#123;</span><br><span class="line">            h[i] = h[i - <span class="number">1</span>] * M + s[i];</span><br><span class="line">            p[i] = p[i - <span class="number">1</span>] * M;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len ; i ++)&#123;</span><br><span class="line"></span><br><span class="line">            ull hp = h[i - <span class="number">1</span>],te;</span><br><span class="line">            <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( len %i != <span class="number">0</span> ) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; len ; j += i)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">1</span>)&#123;</span><br><span class="line">                    te = h[j] - h[j - <span class="number">1</span>]*M;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    te = <span class="built_in">get_hash</span>(j,j + i<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">               <span class="comment">// cout &lt;&lt; i &lt;&lt;  &#x27; &#x27;&lt;&lt;te &lt;&lt; &#x27; &#x27; &lt;&lt; hp &lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">if</span>( hp != te) &#123;</span><br><span class="line">                    flag = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(flag )&#123;</span><br><span class="line">                maxn = len  / i ;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(maxn == <span class="number">0</span>)   cout &lt;&lt;<span class="number">1</span> &lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span>    cout &lt;&lt; maxn &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Seek-the-Name-Seek-the-Fame-1"><a href="#Seek-the-Name-Seek-the-Fame-1" class="headerlink" title="Seek the Name, Seek the Fame"></a><a href="https://vjudge.net/problem/POJ-2752/origin">Seek the Name, Seek the Fame</a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> ull N =  <span class="number">400010</span>,M =<span class="number">131</span>;</span><br><span class="line">string s;</span><br><span class="line">ull h[N],p[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ull <span class="title">get_hash</span><span class="params">(ull l, ull r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h[r] - h[l - <span class="number">1</span>]*p[r - l];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt;s)</span><br><span class="line">    &#123;</span><br><span class="line">        h[<span class="number">0</span>] = s[<span class="number">0</span>];</span><br><span class="line">        p[<span class="number">0</span>] = M;</span><br><span class="line">        ull len = s.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len ; i++)&#123;</span><br><span class="line">            h[i] = h[i <span class="number">-1</span> ] *M + s[i];</span><br><span class="line">            p[i] = p[i - <span class="number">1</span>] * M;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( i == <span class="number">1</span> )&#123;</span><br><span class="line">                <span class="keyword">if</span>( s[<span class="number">0</span>] == s[len <span class="number">-1</span>] )&#123;</span><br><span class="line">                    cout &lt;&lt; <span class="number">1</span> &lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//cout &lt;&lt; len - i - 1&lt;&lt;endl;</span></span><br><span class="line">                ull hp1 = h[i - <span class="number">1</span>], hp2 = <span class="built_in">get_hash</span>(len - i,len - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span>(hp1 == hp2)&#123;</span><br><span class="line">                    cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; len &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-4-扩展KMP"><a href="#2-4-扩展KMP" class="headerlink" title="2.4____ 扩展KMP"></a>2.4____ 扩展KMP</h2><h3 id="Prefixes-and-Suffixes"><a href="#Prefixes-and-Suffixes" class="headerlink" title=" Prefixes and Suffixes"></a><a href="http://codeforces.com/problemset/problem/432/D"> Prefixes and Suffixes</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">&gt;  [Clairewd’s message]([Clairewd&#x27;s message - HDU 4300 - Virtual Judge (vjudge.net)](https://vjudge.net/problem/HDU-4300))</span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 1e5 +10;</span><br><span class="line">int q,ne[N],ex[N];      /// ne为t与自己的后缀数组，ex为s与t的后缀数组</span><br><span class="line">int slen,tlen;          ///匹配串与模板串长度</span><br><span class="line">char s[N],t[N];         ///匹配串，模板串</span><br><span class="line"></span><br><span class="line">void get_next()</span><br><span class="line">&#123;</span><br><span class="line">    ne[0] = tlen;   ///ne[0]一定是T的长度</span><br><span class="line">    int now = 0;</span><br><span class="line">    while(t[now] == t[1 + now] &amp;&amp; now + 1 &lt; tlen) now++;///从1开始暴力枚举第一位</span><br><span class="line">    ne[1] = now;</span><br><span class="line">    int p0 = 1;</span><br><span class="line">    for(int i = 2;  i &lt; tlen ; i++)&#123;</span><br><span class="line">        if( i + ne[i - p0] &lt; ne[p0] + p0 ) ne[i] = ne[i - p0]; /// k + l &lt; p</span><br><span class="line">        else&#123;</span><br><span class="line">            int now = ne[p0] + p0 - i;</span><br><span class="line">            now = max(now, 0);  ///防止i &gt; p 的情况</span><br><span class="line">            while( t[now] == t[i + now] &amp;&amp; i + now &lt; tlen ) now++;</span><br><span class="line">            ne[i] = now;</span><br><span class="line">            p0 = i ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void exkmp()</span><br><span class="line">&#123;</span><br><span class="line">    get_next();</span><br><span class="line">    int now = 0;</span><br><span class="line">    while( s[now] == t[now] &amp;&amp; now &lt; min(slen ,tlen)  ) now++;</span><br><span class="line">    ex[0] = now;</span><br><span class="line">    int p0= 0;</span><br><span class="line">    for(int i = 1; i &lt; slen ; i++)&#123;</span><br><span class="line">        if( i + ne[i - p0] &lt; ex[p0] + p0 ) ex[i] = ne[i - p0];</span><br><span class="line">        else&#123;</span><br><span class="line">            int now = ex[p0] + p0 - i;</span><br><span class="line">            now = max(now, 0);</span><br><span class="line">            while(t[now] == s[i + now] &amp;&amp; now &lt; tlen &amp;&amp; now + i &lt; slen) now++;</span><br><span class="line">            ex[i] = now;</span><br><span class="line">            p0= i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    ios::sync_with_stdio(false);</span><br><span class="line">    cin.tie(0);</span><br><span class="line"></span><br><span class="line">    int n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    while(n--)&#123;</span><br><span class="line">        map&lt;char,char&gt; mp;</span><br><span class="line">        memset(s,0,sizeof s);</span><br><span class="line">        memset(ne,0,sizeof ne);</span><br><span class="line">        memset(ex,0,sizeof ex);</span><br><span class="line">        memset(t,0,sizeof t);</span><br><span class="line">        for(int i = 0 ; i &lt; 26 ; i++)&#123;</span><br><span class="line">            char te;</span><br><span class="line">            cin &gt;&gt;te;</span><br><span class="line">            mp[te] = (char)(i + &#x27;a&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">        cin &gt;&gt;s;</span><br><span class="line">        slen = tlen = strlen(s);</span><br><span class="line"></span><br><span class="line">        for(int i = 0; i &lt;tlen ; i++)&#123;</span><br><span class="line">            t[i] = mp[ s[i] ];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        exkmp();</span><br><span class="line"></span><br><span class="line">        int pos = -1;///从一半开始匹配，才符合题意</span><br><span class="line">        for(int i =  (tlen+1) /2; i &lt; tlen ; i++)&#123;</span><br><span class="line">            if( ex[i] + i == tlen &amp;&amp; ex[i] != 0 )&#123;</span><br><span class="line">                pos = i;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(pos != -1)&#123;</span><br><span class="line">            for(int i = 0 ; i &lt; pos; i ++)&#123;</span><br><span class="line">                cout &lt;&lt; s[i];</span><br><span class="line">            &#125;</span><br><span class="line">            for(int i = 0 ; i &lt; pos ; i++)&#123;</span><br><span class="line">                cout &lt;&lt; t[i];</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        &#125;///如果一般之后的后缀数组都为0就直接先输出s在输出t</span><br><span class="line">        else cout &lt;&lt; s &lt;&lt; t&lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-5-回文Manacher"><a href="#2-5-回文Manacher" class="headerlink" title="2.5____回文Manacher"></a>2.5____回文Manacher</h2><h3 id="3188-manacher算法-AcWing题库"><a href="#3188-manacher算法-AcWing题库" class="headerlink" title="3188. manacher算法 - AcWing题库"></a><a href="https://www.acwing.com/problem/content/description/3190/">3188. manacher算法 - AcWing题库</a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">int</span> d1[<span class="number">10000010</span>];</span><br><span class="line"><span class="keyword">int</span> d2[<span class="number">10000010</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_d1</span><span class="params">()</span><span class="comment">/// 计算长度为奇数的回文串</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, l = <span class="number">0</span> , r = <span class="number">-1</span>; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> k = (i &gt; r)?<span class="number">1</span>:<span class="built_in">min</span>( d1[l+r-i],r-i );</span><br><span class="line">        <span class="keyword">while</span>( <span class="number">0</span> &lt;= i-k &amp;&amp; i + k &lt; n &amp;&amp; s[i-k] == s[i +k] ) k++;</span><br><span class="line"></span><br><span class="line">        d1[i] = k--;</span><br><span class="line">        <span class="keyword">if</span>( i + k &gt; r )&#123;</span><br><span class="line">            l = i-k;</span><br><span class="line">            r = i+k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_d2</span><span class="params">()</span><span class="comment">///计算长度为偶数的回文串</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, l = <span class="number">0</span> , r = <span class="number">-1</span>; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> k = (i &gt; r)?<span class="number">0</span>:<span class="built_in">min</span>( d2[l+r-i + <span class="number">1</span>],r-i+<span class="number">1</span> );</span><br><span class="line">        <span class="keyword">while</span>( <span class="number">0</span> &lt;= i-k<span class="number">-1</span> &amp;&amp; i + k &lt; n &amp;&amp; s[i-k<span class="number">-1</span>] == s[i +k] ) k++;</span><br><span class="line"></span><br><span class="line">        d2[i] = k--;</span><br><span class="line">        <span class="keyword">if</span>( i + k &gt; r )&#123;</span><br><span class="line">            l = i-k<span class="number">-1</span>;</span><br><span class="line">            r = i+k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">manacher</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">get_d1</span>();</span><br><span class="line">    <span class="built_in">get_d2</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    n = s.<span class="built_in">length</span>();</span><br><span class="line">    <span class="built_in">manacher</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">        ans = <span class="built_in">max</span>(ans,d1[i]*<span class="number">2</span><span class="number">-1</span>);</span><br><span class="line">        ans = <span class="built_in">max</span>(ans,d2[i]*<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h2><h3 id="Problem-M-Codeforces-Unofficial-mirror-site-accelerated-for-Chinese-users"><a href="#Problem-M-Codeforces-Unofficial-mirror-site-accelerated-for-Chinese-users" class="headerlink" title="Problem - M - Codeforces (Unofficial mirror site, accelerated for Chinese users)"></a><a href="https://codeforces.ml/gym/102900/problem/M">Problem - M - Codeforces (Unofficial mirror site, accelerated for Chinese users)</a></h3><blockquote><p><a href="https://vjudge.net/problem/HDU-6964">I love counting - HDU 6964 - Virtual Judge (vjudge.net)</a></p></blockquote><h1 id="3-计算几何"><a href="#3-计算几何" class="headerlink" title="3____计算几何"></a>3____计算几何</h1><h2 id="上次cf刷到的位置Problemset-Codeforces"><a href="#上次cf刷到的位置Problemset-Codeforces" class="headerlink" title="上次cf刷到的位置Problemset - Codeforces)"></a>上次cf刷到的位置<a href="https://codeforces.com/problemset?order=BY_RATING_ASC&tags=geometry,1800-2600">Problemset - Codeforces</a>)</h2><h3 id="Triangle"><a href="#Triangle" class="headerlink" title="Triangle"></a><a href="https://nanti.jisuanke.com/t/42405">Triangle</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Naive-and-Silly-Muggles"><a href="#Naive-and-Silly-Muggles" class="headerlink" title="Naive and Silly Muggles"></a><a href="https://vjudge.net/contest/422089#problem/E">Naive and Silly Muggles</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-1-叉积判断点线关系"><a href="#3-1-叉积判断点线关系" class="headerlink" title="3.1____叉积判断点线关系"></a>3.1____叉积判断点线关系</h2><h3 id="TOYS"><a href="#TOYS" class="headerlink" title="TOYS"></a><a href="https://vjudge.net/problem/POJ-2318">TOYS</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,x1,x2,y1,y2;</span><br><span class="line"><span class="comment">/// n为分区数，m为玩具数，左上坐标，右下坐标</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//typedef Point Vector;</span></span><br><span class="line"><span class="comment">//Vector oprator + ( Vector A,Vector B ) &#123; return Vector ( A.x + B.x , A.y + B.y ); &#125;</span></span><br><span class="line"><span class="comment">//Vector oprator - ( Vector A,Vector B ) &#123; return Vector (  )&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Line</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Point a,b;</span><br><span class="line">&#125;line[<span class="number">5001</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">5001</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Cross</span><span class="params">(Point p1,Point p2)</span> <span class="comment">///求叉积</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> p1.x * p2.y - p1.y * p2.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">dir</span><span class="params">(<span class="keyword">int</span> k ,Point p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Point a,b;</span><br><span class="line">    a.x = line[k].a.x - p.x;</span><br><span class="line">    a.y = line[k].a.y - p.y;</span><br><span class="line">    b.x = line[k].b.x - p.x;</span><br><span class="line">    b.y = line[k].b.y - p.y;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Cross</span>( a,b ) &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Find</span><span class="params">(Point p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n ;</span><br><span class="line">    <span class="keyword">while</span>( l &lt;= r )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = ( l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">dir</span>(mid,p) ) l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>( cin &gt;&gt; n )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( n == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> cnt);</span><br><span class="line">        cin &gt;&gt; m &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            line[i].a.y = y1;</span><br><span class="line">            line[i].b.y = y2;</span><br><span class="line">            cin &gt;&gt; line[i].a.x &gt;&gt; line[i].b.x;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">///对应区间</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Point p;</span><br><span class="line">            cin &gt;&gt; p.x &gt;&gt; p.y;</span><br><span class="line">            ++cnt[ <span class="built_in">Find</span>(p) ];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">///打印</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt;= n ;i ++) cout &lt;&lt; i &lt;&lt;<span class="string">&quot;: &quot;</span> &lt;&lt; cnt[i] &lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Segments"><a href="#Segments" class="headerlink" title="Segments"></a><a href="https://vjudge.net/problem/POJ-3304">Segments</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">fabs</span>(x) &lt; eps ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( x &lt; <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">///square of a double</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123; <span class="keyword">return</span> x * x; &#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;               <span class="comment">///no arguments constructor</span></span><br><span class="line">    <span class="built_in">Point</span>(<span class="keyword">double</span> _x,<span class="keyword">double</span> _y) &#123;</span><br><span class="line">        x = _x , y = _y;    <span class="comment">///arguments constructor</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(y - b.y) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span>? <span class="built_in">sgn</span>(y - b.y) &lt; <span class="number">0</span> : x &lt; b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> ^ (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.y - y * b.x;</span><br><span class="line">    &#125;</span><br><span class="line">     Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x - b.x , y - b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x + b.x , y + b.y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;s[N*<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Line</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Point s,e;</span><br><span class="line">    <span class="built_in">Line</span>()&#123;&#125;</span><br><span class="line">    <span class="built_in">Line</span>( Point _s, Point _e )&#123; s =_s ; e=_e; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///直线与线段相交判断</span></span><br><span class="line">    <span class="comment">///-*this line -v seg</span></span><br><span class="line">    <span class="comment">///2规范相交，1非规范相交,0不相交</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">linecrossseg</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>( (v.s - e) ^ (s - e) ) * <span class="built_in">sgn</span>(( v.e-e ) ^ (s -e) ) &lt;= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;line[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,x1,x2,y1,y2;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; line[i].s.x &gt;&gt; line[i].s.y;</span><br><span class="line">            cin &gt;&gt; line[i].e.x &gt;&gt; line[i].e.y;</span><br><span class="line">            s[i*<span class="number">2</span> <span class="number">-1</span>] = line[i].s , s[i*<span class="number">2</span>] = line[i].e;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">///对每个点进行枚举</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span> ; j &lt;= <span class="number">2</span> * n ; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//cout &lt;&lt; s[i].x &lt;&lt; &#x27; &#x27; &lt;&lt; s[i].y &lt;&lt; &quot; | &quot; &lt;&lt;s[j].x &lt;&lt; &#x27; &#x27;&lt;&lt; s[j].y &lt;&lt;endl;</span></span><br><span class="line">                <span class="function">Line <span class="title">te</span><span class="params">(s[i],s[j])</span></span>;</span><br><span class="line">                <span class="keyword">if</span>( s[i].x == s[j].x &amp;&amp; s[i].y == s[j].y ) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="comment">///验证这个枚举的线是不是与每个线段都相交</span></span><br><span class="line">                <span class="keyword">int</span> k;</span><br><span class="line">                <span class="keyword">for</span>(k = <span class="number">1</span>;k &lt;= n; k++)</span><br><span class="line">                <span class="comment">//cout &lt;&lt; te.linecrossseg( line[k] ) &lt;&lt; endl;</span></span><br><span class="line">                <span class="keyword">if</span>( !te.<span class="built_in">linecrossseg</span>( line[k] ) ) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>(k == n +<span class="number">1</span>) flag = <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//cout &lt;&lt; k &lt;&lt; endl;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) cout &lt;&lt; <span class="string">&quot;Yes!&quot;</span> &lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;No!&quot;</span> &lt;&lt; endl;</span><br><span class="line">       <span class="comment">// cout&lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-多边形重心"><a href="#3-2-多边形重心" class="headerlink" title="3.2____多边形重心"></a>3.2____多边形重心</h2><h3 id="Lifting-the-Stone"><a href="#Lifting-the-Stone" class="headerlink" title="Lifting the Stone"></a><a href="https://vjudge.net/problem/HDU-1115">Lifting the Stone</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="built_in">acos</span>( <span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">///Compares a double to zero</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">fabs</span>(x) &lt; eps ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( x &lt; <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">///square of a double</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123; <span class="keyword">return</span> x * x; &#125;</span><br><span class="line"><span class="comment">/////////////////////////////////////////////////</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;               <span class="comment">///no arguments constructor</span></span><br><span class="line">    <span class="built_in">Point</span>(<span class="keyword">double</span> _x,<span class="keyword">double</span> _y) &#123;</span><br><span class="line">        x = _x , y = _y;    <span class="comment">///arguments constructor</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(y - b.y) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span>? <span class="built_in">sgn</span>(y - b.y) &lt; <span class="number">0</span> : x &lt; b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///数量积</span></span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x - b.x , y - b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x + b.x , y + b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x * k , y * k );</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x / k , y / k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///叉积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> ^ (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.y - y * b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///点积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> * (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.x + y * b.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///线段的长度</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hypot</span>(x,y);  <span class="comment">///&lt;cmath&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///长度的平方</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * x + y * y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///返回两点的距离</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">distance</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hypot</span>( x - p.x , y - p.y );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxp = <span class="number">10000010</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">polygon</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    Point p[maxp];</span><br><span class="line">    <span class="comment">//Line l[maxp];</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getarea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n ; i++)&#123;</span><br><span class="line">            sum += p[i].<span class="built_in">distance</span>(p[(i+<span class="number">1</span>)%n]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">Point <span class="title">getbarycentre</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">Point <span class="title">ret</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">double</span> area = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>;  i++)&#123;</span><br><span class="line">            <span class="keyword">double</span> tmp = (p[i] - p[<span class="number">0</span>] )^ ( p[i +<span class="number">1</span>] -p[<span class="number">0</span>] );</span><br><span class="line">           <span class="comment">// printf(&quot;%.2f\n&quot;,tmp);</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">sgn</span>(tmp) == <span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            area += tmp;</span><br><span class="line">            ret.x += ( p[<span class="number">0</span>].x + p[i].x + p[i +<span class="number">1</span>].x )/ <span class="number">3</span> * tmp;</span><br><span class="line">            ret.y += ( p[<span class="number">0</span>].y + p[i].y + p[i+<span class="number">1</span>].y ) /<span class="number">3</span> * tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">sgn</span>(area) ) ret = ret /area;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;pol;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        pol.n = n ;</span><br><span class="line">        <span class="comment">//scanf(&quot;%d%d&quot;,&amp;pol.p[0].x,&amp;pol.p[0].y);</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;pol.p[i].x,&amp;pol.p[i].y);</span><br><span class="line"><span class="comment">//            pol.l[i-1].s.x = pol.p[i-1].x;</span></span><br><span class="line"><span class="comment">//            pol.l[i-1].s.y = pol.p[i-1].y;</span></span><br><span class="line"><span class="comment">//            pol.l[i-1].e.x = pol.p[i].x;</span></span><br><span class="line"><span class="comment">//            pol.l[i-1].e.y = pol.p[i].y;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Point ans = pol.<span class="built_in">getbarycentre</span>();</span><br><span class="line">        <span class="keyword">if</span>( ans.x &gt; <span class="number">-0.001</span> &amp;&amp; ans.x &lt; <span class="number">0.0</span> ) ans.x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>( ans.y &gt; <span class="number">-0.001</span> &amp;&amp; ans.y &lt; <span class="number">0.0</span> ) ans.y = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f %.2f\n&quot;</span>,ans.x ,ans.y);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-极角排序"><a href="#3-3-极角排序" class="headerlink" title="3.3____极角排序"></a>3.3____极角排序</h2><p><code>思路</code> ：事先将两个点连成线，然后用叉积来判断第三个点在这个线的左边还是右边，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="built_in">acos</span>( <span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">///Compares a double to zero</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">fabs</span>(x) &lt; eps ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( x &lt; <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">///square of a double</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123; <span class="keyword">return</span> x * x; &#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;               <span class="comment">///no arguments constructor</span></span><br><span class="line">    <span class="built_in">Point</span>(<span class="keyword">double</span> _x,<span class="keyword">double</span> _y) &#123;</span><br><span class="line">        x = _x , y = _y;    <span class="comment">///arguments constructor</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(y - b.y) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span>? <span class="built_in">sgn</span>(y - b.y) &lt; <span class="number">0</span> : x &lt; b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///数量积</span></span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x - b.x , y - b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x + b.x , y + b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x * k , y * k );</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x / k , y / k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///叉积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> ^ (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.y - y * b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///点积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> * (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.x + y * b.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///返回两点的距离</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">distance</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sqrt</span>( <span class="built_in">sqr</span>( x- p.x ) + <span class="built_in">sqr</span>(y - p.y) );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;P[<span class="number">510</span>];</span><br><span class="line"></span><br><span class="line">Point ans[<span class="number">510</span>];</span><br><span class="line"></span><br><span class="line">Point init;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Point a,Point b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">fabs</span>( (a - init)^( b - init ) ) &lt; eps ) <span class="comment">///  如果极角相同，比较距离</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> init.<span class="built_in">distance</span>(a) &lt; init.<span class="built_in">distance</span>(b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in"><span class="keyword">return</span></span> ( (a - init) ^ (b - init) )&gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>( <span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">int</span> miny = <span class="number">100000000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            cin &gt;&gt; P[i].num &gt;&gt; P[i].x &gt;&gt; P[i].y;</span><br><span class="line">            <span class="keyword">if</span>( P[i].y &lt; miny ) miny = P[i].y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        init.x = <span class="number">0</span>,init.y = miny;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sort</span>(P+i,P+<span class="number">1</span>+n,cmp);</span><br><span class="line">            ans[i] = P[i];</span><br><span class="line">            init = P[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; n &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++ )</span><br><span class="line">            cout &lt;&lt; ans[i].num &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-计算几何，思维题"><a href="#3-4-计算几何，思维题" class="headerlink" title="3.4____计算几何，思维题"></a>3.4____计算几何，思维题</h2><h3 id="An-Easy-Problem"><a href="#An-Easy-Problem" class="headerlink" title="An Easy Problem?!"></a><a href="https://vjudge.net/problem/POJ-2826">An Easy Problem?!</a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="built_in">acos</span>( <span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">///Compares a double to zero</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">fabs</span>(x) &lt; eps ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( x &lt; <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">///square of a double</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123; <span class="keyword">return</span> x * x; &#125;</span><br><span class="line"><span class="comment">/////////////////////////////////////////////////</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;               <span class="comment">///no arguments constructor</span></span><br><span class="line">    <span class="built_in">Point</span>(<span class="keyword">double</span> _x,<span class="keyword">double</span> _y) &#123;</span><br><span class="line">        x = _x , y = _y;    <span class="comment">///arguments constructor</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(y - b.y) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span>? <span class="built_in">sgn</span>(y - b.y) &lt; <span class="number">0</span> : x &lt; b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///数量积</span></span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x - b.x , y - b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x + b.x , y + b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x * k , y * k );</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x / k , y / k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///叉积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> ^ (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.y - y * b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///点积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> * (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.x + y * b.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///线段的长度</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hypot</span>(x,y);  <span class="comment">///&lt;cmath&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///长度的平方</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * x + y * y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///返回两点的距离</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">distance</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hypot</span>( x - p.x , y - p.y );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Line</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="keyword">char</span>&gt; croset;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> name;</span><br><span class="line"></span><br><span class="line">    Point s,e;</span><br><span class="line">    <span class="built_in">Line</span>()&#123;&#125;</span><br><span class="line">    <span class="built_in">Line</span>( Point _s, Point _e )&#123; s =_s ; e=_e; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(Point _p1,Point _p2)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        s = _p1,e = _p2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///直线与线段相交判断</span></span><br><span class="line">    <span class="comment">///-*this line -v seg</span></span><br><span class="line">    <span class="comment">///2规范相交，1非规范相交,0不相交</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">linecrossseg</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>( (v.s - e) ^ (s - e) ) * <span class="built_in">sgn</span>(( v.e-e ) ^ (s -e) ) &lt;= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">///点与直线关系</span></span><br><span class="line">    <span class="comment">///1在左侧</span></span><br><span class="line">    <span class="comment">///2在右侧</span></span><br><span class="line">    <span class="comment">///3在直线</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">relation</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c = <span class="built_in">sgn</span>( (p-s) ^ (e -s) );</span><br><span class="line">        <span class="keyword">if</span>(c &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///点在线段上的判断</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">point_on_seg</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>((p-s)^(e-s) ) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>( (p-s)*(p-e) ) &lt;= <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///两向量平行(对应直线平行或重合)</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">parallel</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>( (e-s)^( v.e - v.s ) ) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///两直线关系 0-平行，1-重合，2-相交</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">linecrossline</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (*<span class="keyword">this</span>).<span class="built_in">parallel</span>(v) )</span><br><span class="line">            <span class="keyword">return</span> v.<span class="built_in">relation</span>(s) == <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///得到交点，需先判断直线是否相交</span></span><br><span class="line">    <span class="function">Point <span class="title">crosspoint</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> a1 = ( v.e - v.s ) ^ ( s - v.s );</span><br><span class="line">        <span class="keyword">double</span> a2 = ( v.e - v.s ) ^ ( e - v.s );</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>( (s.x * a2 - e.x * a1)/(a2 - a1) , (s.y *a2 - e.y *a1)/(a2 - a1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///两线段相交判断</span></span><br><span class="line">    <span class="comment">///2 规范相交</span></span><br><span class="line">    <span class="comment">///1 非规范相交</span></span><br><span class="line">    <span class="comment">///0 不想交</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">segcrossseg</span><span class="params">(Line v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> d1 = <span class="built_in">sgn</span>((e - s) ^ (v.s - s));</span><br><span class="line">        <span class="keyword">int</span> d2 = <span class="built_in">sgn</span>((e - s) ^ (v.e - s));</span><br><span class="line">        <span class="keyword">int</span> d3 = <span class="built_in">sgn</span>((v.e - v.s) ^ (s - v.s));</span><br><span class="line">        <span class="keyword">int</span> d4 = <span class="built_in">sgn</span>((v.e - v.s) ^ (e - v.s));</span><br><span class="line">        <span class="keyword">if</span> ((d1 ^ d2) == <span class="number">-2</span> &amp;&amp; (d3 ^ d4) == <span class="number">-2</span>)<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> (d1 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((v.s - s) * (v.s - e)) &lt;= <span class="number">0</span>) ||</span><br><span class="line">            (d2 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((v.e - s) * (v.e - e)) &lt;= <span class="number">0</span>) ||</span><br><span class="line">            (d3 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((s - v.s) * (s - v.e)) &lt;= <span class="number">0</span>) ||</span><br><span class="line">            (d4 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((e - v.s) * (e - v.e)) &lt;= <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">polygon</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> num;      <span class="comment">///点的数量</span></span><br><span class="line">    Point p[<span class="number">4</span>];</span><br><span class="line">    Line l[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">cmp</span>&#123;</span></span><br><span class="line">        Point p;</span><br><span class="line">        <span class="built_in">cmp</span>(<span class="keyword">const</span> Point &amp;p0)&#123; p = p0;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">( <span class="keyword">const</span> Point &amp;aa ,<span class="keyword">const</span> Point &amp;bb)</span></span>&#123;</span><br><span class="line">            Point a = aa,b = bb;</span><br><span class="line">            <span class="keyword">int</span> d = <span class="built_in">sgn</span>( (a-p)^(b-p) );</span><br><span class="line">            <span class="keyword">if</span>(d == <span class="number">0</span>)  <span class="keyword">return</span> <span class="built_in">sgn</span>( a.<span class="built_in">distance</span>(p) - b.<span class="built_in">distance</span>(p)) &lt; <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> d &gt; <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 3在顶点上</span></span><br><span class="line">    <span class="comment">/// 2在边上</span></span><br><span class="line">    <span class="comment">/// 1在内部</span></span><br><span class="line">    <span class="comment">/// 0在外面</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Point_in_polygon</span><span class="params">(Point tep)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; num ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( p[i] == tep ) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; num ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( l[i].<span class="built_in">point_on_seg</span>(tep) ) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tecnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; num ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j = (i + <span class="number">1</span>) % num;</span><br><span class="line">            <span class="keyword">int</span> c = <span class="built_in">sgn</span>( (tep - p[j]) ^ (p[i] - p[j]) );</span><br><span class="line">            <span class="keyword">int</span> u = <span class="built_in">sgn</span>( p[i].y - tep.y );</span><br><span class="line">            <span class="keyword">int</span> v = <span class="built_in">sgn</span>( p[j].y - tep.y );</span><br><span class="line">            <span class="keyword">if</span>( c &gt; <span class="number">0</span> &amp;&amp; u &lt; <span class="number">0</span> &amp;&amp; v &gt;=<span class="number">0</span> ) tecnt ++;</span><br><span class="line">            <span class="keyword">if</span>( c &lt; <span class="number">0</span> &amp;&amp; u &gt;= <span class="number">0</span> &amp;&amp; v &lt; <span class="number">0</span> ) tecnt --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tecnt != <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;pol;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        Point p1,p2,j1,j3;</span><br><span class="line">        cin &gt;&gt; p1.x &gt;&gt; p1.y &gt;&gt; p2.x &gt;&gt; p2.y &gt;&gt; j1.x &gt;&gt; j1.y &gt;&gt; j3.x &gt;&gt; j3.y;</span><br><span class="line">        <span class="keyword">if</span>( j1.x &gt; j3.x ) <span class="built_in">swap</span>(j1,j3);</span><br><span class="line"></span><br><span class="line">        <span class="function">Line <span class="title">lp</span><span class="params">(p1,p2)</span></span>;</span><br><span class="line">        Point j2,j4;</span><br><span class="line">        j2.x = j3.x,j2.y = j1.y,j4.x = j1.x ,j4.y = j3.y;</span><br><span class="line">        polygon pol;</span><br><span class="line">        pol.p[<span class="number">0</span>] = j1;</span><br><span class="line">        pol.p[<span class="number">1</span>] = j2;</span><br><span class="line">        pol.p[<span class="number">2</span>] = j3;</span><br><span class="line">        pol.p[<span class="number">3</span>] = j4;</span><br><span class="line">        pol.l[<span class="number">0</span>].<span class="built_in">input</span>(j1,j2);pol.l[<span class="number">1</span>].<span class="built_in">input</span>(j2,j3),pol.l[<span class="number">2</span>].<span class="built_in">input</span>(j3,j4),pol.l[<span class="number">3</span>].<span class="built_in">input</span>(j4,j1);</span><br><span class="line">        pol.num = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span> ; i++)</span><br><span class="line">            <span class="keyword">if</span>( lp.<span class="built_in">segcrossseg</span>(pol.l[i]) &gt; <span class="number">0</span> )&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( flag ) cout &lt;&lt;<span class="string">&#x27;T&#x27;</span> &lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//cout &lt;&lt; pol.Point_in_polygon(p1) &lt;&lt; &#x27; &#x27; &lt;&lt;  pol.Point_in_polygon(p2) &lt;&lt; endl;</span></span><br><span class="line">            <span class="keyword">if</span>( pol.<span class="built_in">Point_in_polygon</span>(p1) &amp;&amp; pol.<span class="built_in">Point_in_polygon</span>(p2)  ) cout &lt;&lt; <span class="string">&#x27;T&#x27;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; <span class="string">&#x27;F&#x27;</span> &lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Kadj-Squares"><a href="#Kadj-Squares" class="headerlink" title="Kadj Squares"></a><a href="https://vjudge.net/problem/POJ-3347">Kadj Squares</a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r,s;</span><br><span class="line">&#125;p[<span class="number">500</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> loc[<span class="number">500</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( n == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ;  i &lt; n ; i++)   cin &gt;&gt; p[i].s;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n  ; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ll = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i ; j ++)</span><br><span class="line">                ll = <span class="built_in">max</span>(ll , p[j].r - <span class="built_in">abs</span>( p[j].s - p[i].s ));</span><br><span class="line">            p[i].l =ll;</span><br><span class="line">            p[i].r = ll + <span class="number">2</span> * p[i].s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =  <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ml = p[i].l,mr = p[i].r;<span class="comment">///重要</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i ; j++)</span><br><span class="line">                    ml = <span class="built_in">max</span>(ml,p[j].r);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n ; j++)</span><br><span class="line">                    mr = <span class="built_in">min</span>(mr,p[j].l);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( ml &gt;= mr ) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Nezzar-and-Nice-Beatmap-Problem-1477C-Codeforces"><a href="#Nezzar-and-Nice-Beatmap-Problem-1477C-Codeforces" class="headerlink" title="[Nezzar and Nice Beatmap](Problem - 1477C - Codeforces)"></a>[Nezzar and Nice Beatmap](<a href="https://codeforces.com/problemset/problem/1477/C">Problem - 1477C - Codeforces</a>)</h3><p><strong>题意：</strong> 在平面上按序给定 $n$ 个点，问能不能将这些点重新排序，使任意三个相邻的点形成的角都是锐角，若能就输出新的序列，不能输出$-1$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">&#125; p[<span class="number">5005</span>];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">vec</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    point s,e;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">f</span><span class="params">(point a,point b,point c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    point v1 = &#123; a.x - b.x,a.y - b.y &#125;;</span><br><span class="line">    point v2 = &#123; c.x - b.x,c.y - b.y &#125;;</span><br><span class="line">    <span class="keyword">double</span> dot = v1.x * v2.x + v1.y * v2.y;</span><br><span class="line">    <span class="keyword">if</span>( dot &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; p[i].x &gt;&gt;p[i].y;</span><br><span class="line">        p[i].num = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span> ; i &lt;= n  ; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i  ; j &gt;= <span class="number">3</span> ; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( !<span class="built_in">f</span>(p[j],p[j<span class="number">-1</span>],p[j<span class="number">-2</span>]) )</span><br><span class="line">                <span class="built_in">swap</span>( p[j],p[j<span class="number">-1</span>] );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; p[i].num &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Problem-1486B-Codeforces"><a href="#Problem-1486B-Codeforces" class="headerlink" title="Problem - 1486B - Codeforces"></a><a href="https://codeforces.ml/problemset/problem/1486/B">Problem - 1486B - Codeforces</a></h3><p>一维中位数满足所有数到中位数的距离最小值的全局最优</p><p>利用这一性质，将所有点的x ,y分别排序，中位数的垂线交点数量即为答案</p><p>例如（1,2,3）中位数就是2，（1,2,3,4）中位数就是2和3。（这里要注意n为奇数的话中位数就只有一个，n为偶数时中位数就会有两个，所以特殊点就是这两个点中的所有点而不就这俩端点，例如（1,2,4,5）的中位数是2,4，特殊点是2,3,4。）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll x[<span class="number">2102102</span>],y[<span class="number">2102102</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ll t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">ll b;</span><br><span class="line">cin&gt;&gt;b;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=b;i++)&#123;</span><br><span class="line">cin&gt;&gt;x[i]&gt;&gt;y[i]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(x+<span class="number">1</span>,x+b+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">sort</span>(y+<span class="number">1</span>,y+<span class="number">1</span>+b);</span><br><span class="line"><span class="keyword">if</span>(b%<span class="number">2</span>)cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout&lt;&lt;(x[b/<span class="number">2</span>+<span class="number">1</span>]-x[b/<span class="number">2</span>]+<span class="number">1</span>)*(y[b/<span class="number">2</span>+<span class="number">1</span>]-y[b/<span class="number">2</span>]+<span class="number">1</span>)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-5-线段与多边形判断相交"><a href="#3-5-线段与多边形判断相交" class="headerlink" title="3.5____线段与多边形判断相交"></a>3.5____线段与多边形判断相交</h2><h3 id="Intersection"><a href="#Intersection" class="headerlink" title="Intersection"></a><a href="https://vjudge.net/problem/POJ-1410">Intersection</a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="built_in">acos</span>( <span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">///Compares a double to zero</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">fabs</span>(x) &lt; eps ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( x &lt; <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">///square of a double</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123; <span class="keyword">return</span> x * x; &#125;</span><br><span class="line"><span class="comment">/////////////////////////////////////////////////</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;               <span class="comment">///no arguments constructor</span></span><br><span class="line">    <span class="built_in">Point</span>(<span class="keyword">double</span> _x,<span class="keyword">double</span> _y) &#123;</span><br><span class="line">        x = _x , y = _y;    <span class="comment">///arguments constructor</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(y - b.y) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span>? <span class="built_in">sgn</span>(y - b.y) &lt; <span class="number">0</span> : x &lt; b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///数量积</span></span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x - b.x , y - b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x + b.x , y + b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x * k , y * k );</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x / k , y / k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///叉积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> ^ (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.y - y * b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///点积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> * (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.x + y * b.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///线段的长度</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hypot</span>(x,y);  <span class="comment">///&lt;cmath&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///长度的平方</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * x + y * y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///返回两点的距离</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">distance</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hypot</span>( x - p.x , y - p.y );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Line</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="keyword">char</span>&gt; croset;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> name;</span><br><span class="line"></span><br><span class="line">    Point s,e;</span><br><span class="line">    <span class="built_in">Line</span>()&#123;&#125;</span><br><span class="line">    <span class="built_in">Line</span>( Point _s, Point _e )&#123; s =_s ; e=_e; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(Point _p1,Point _p2)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        s = _p1,e = _p2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///直线与线段相交判断</span></span><br><span class="line">    <span class="comment">///-*this line -v seg</span></span><br><span class="line">    <span class="comment">///2规范相交，1非规范相交,0不相交</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">linecrossseg</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>( (v.s - e) ^ (s - e) ) * <span class="built_in">sgn</span>(( v.e-e ) ^ (s -e) ) &lt;= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">///点与直线关系</span></span><br><span class="line">    <span class="comment">///1在左侧</span></span><br><span class="line">    <span class="comment">///2在右侧</span></span><br><span class="line">    <span class="comment">///3在直线</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">relation</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c = <span class="built_in">sgn</span>( (p-s) ^ (e -s) );</span><br><span class="line">        <span class="keyword">if</span>(c &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///点在线段上的判断</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">point_on_seg</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>((p-s)^(e-s) ) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>( (p-s)*(p-e) ) &lt;= <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///两向量平行(对应直线平行或重合)</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">parallel</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>( (e-s)^( v.e - v.s ) ) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///两直线关系 0-平行，1-重合，2-相交</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">linecrossline</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (*<span class="keyword">this</span>).<span class="built_in">parallel</span>(v) )</span><br><span class="line">            <span class="keyword">return</span> v.<span class="built_in">relation</span>(s) == <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///得到交点，需先判断直线是否相交</span></span><br><span class="line">    <span class="function">Point <span class="title">crosspoint</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> a1 = ( v.e - v.s ) ^ ( s - v.s );</span><br><span class="line">        <span class="keyword">double</span> a2 = ( v.e - v.s ) ^ ( e - v.s );</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>( (s.x * a2 - e.x * a1)/(a2 - a1) , (s.y *a2 - e.y *a1)/(a2 - a1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///两线段相交判断</span></span><br><span class="line">    <span class="comment">///2 规范相交</span></span><br><span class="line">    <span class="comment">///1 非规范相交</span></span><br><span class="line">    <span class="comment">///0 不想交</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">segcrossseg</span><span class="params">(Line v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> d1 = <span class="built_in">sgn</span>((e - s) ^ (v.s - s));</span><br><span class="line">        <span class="keyword">int</span> d2 = <span class="built_in">sgn</span>((e - s) ^ (v.e - s));</span><br><span class="line">        <span class="keyword">int</span> d3 = <span class="built_in">sgn</span>((v.e - v.s) ^ (s - v.s));</span><br><span class="line">        <span class="keyword">int</span> d4 = <span class="built_in">sgn</span>((v.e - v.s) ^ (e - v.s));</span><br><span class="line">        <span class="keyword">if</span> ((d1 ^ d2) == <span class="number">-2</span> &amp;&amp; (d3 ^ d4) == <span class="number">-2</span>)<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> (d1 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((v.s - s) * (v.s - e)) &lt;= <span class="number">0</span>) ||</span><br><span class="line">            (d2 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((v.e - s) * (v.e - e)) &lt;= <span class="number">0</span>) ||</span><br><span class="line">            (d3 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((s - v.s) * (s - v.e)) &lt;= <span class="number">0</span>) ||</span><br><span class="line">            (d4 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((e - v.s) * (e - v.e)) &lt;= <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">polygon</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> num;      <span class="comment">///点的数量</span></span><br><span class="line">    Point p[<span class="number">4</span>];</span><br><span class="line">    Line l[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">cmp</span>&#123;</span></span><br><span class="line">        Point p;</span><br><span class="line">        <span class="built_in">cmp</span>(<span class="keyword">const</span> Point &amp;p0)&#123; p = p0;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">( <span class="keyword">const</span> Point &amp;aa ,<span class="keyword">const</span> Point &amp;bb)</span></span>&#123;</span><br><span class="line">            Point a = aa,b = bb;</span><br><span class="line">            <span class="keyword">int</span> d = <span class="built_in">sgn</span>( (a-p)^(b-p) );</span><br><span class="line">            <span class="keyword">if</span>(d == <span class="number">0</span>)  <span class="keyword">return</span> <span class="built_in">sgn</span>( a.<span class="built_in">distance</span>(p) - b.<span class="built_in">distance</span>(p)) &lt; <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> d &gt; <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 3在顶点上</span></span><br><span class="line">    <span class="comment">/// 2在边上</span></span><br><span class="line">    <span class="comment">/// 1在内部</span></span><br><span class="line">    <span class="comment">/// 0在外面</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Point_in_polygon</span><span class="params">(Point tep)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; num ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( p[i] == tep ) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; num ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( l[i].<span class="built_in">point_on_seg</span>(tep) ) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tecnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; num ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j = (i + <span class="number">1</span>) % num;</span><br><span class="line">            <span class="keyword">int</span> c = <span class="built_in">sgn</span>( (tep - p[j]) ^ (p[i] - p[j]) );</span><br><span class="line">            <span class="keyword">int</span> u = <span class="built_in">sgn</span>( p[i].y - tep.y );</span><br><span class="line">            <span class="keyword">int</span> v = <span class="built_in">sgn</span>( p[j].y - tep.y );</span><br><span class="line">            <span class="keyword">if</span>( c &gt; <span class="number">0</span> &amp;&amp; u &lt; <span class="number">0</span> &amp;&amp; v &gt;=<span class="number">0</span> ) tecnt ++;</span><br><span class="line">            <span class="keyword">if</span>( c &lt; <span class="number">0</span> &amp;&amp; u &gt;= <span class="number">0</span> &amp;&amp; v &lt; <span class="number">0</span> ) tecnt --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tecnt != <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;pol;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        Point p1,p2,j1,j3;</span><br><span class="line">        cin &gt;&gt; p1.x &gt;&gt; p1.y &gt;&gt; p2.x &gt;&gt; p2.y &gt;&gt; j1.x &gt;&gt; j1.y &gt;&gt; j3.x &gt;&gt; j3.y;</span><br><span class="line">        <span class="keyword">if</span>( j1.x &gt; j3.x ) <span class="built_in">swap</span>(j1,j3);</span><br><span class="line"></span><br><span class="line">        <span class="function">Line <span class="title">lp</span><span class="params">(p1,p2)</span></span>;</span><br><span class="line">        Point j2,j4;</span><br><span class="line">        j2.x = j3.x,j2.y = j1.y,j4.x = j1.x ,j4.y = j3.y;</span><br><span class="line">        polygon pol;</span><br><span class="line">        pol.p[<span class="number">0</span>] = j1;</span><br><span class="line">        pol.p[<span class="number">1</span>] = j2;</span><br><span class="line">        pol.p[<span class="number">2</span>] = j3;</span><br><span class="line">        pol.p[<span class="number">3</span>] = j4;</span><br><span class="line">        pol.l[<span class="number">0</span>].<span class="built_in">input</span>(j1,j2);pol.l[<span class="number">1</span>].<span class="built_in">input</span>(j2,j3),pol.l[<span class="number">2</span>].<span class="built_in">input</span>(j3,j4),pol.l[<span class="number">3</span>].<span class="built_in">input</span>(j4,j1);</span><br><span class="line">        pol.num = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span> ; i++)</span><br><span class="line">            <span class="keyword">if</span>( lp.<span class="built_in">segcrossseg</span>(pol.l[i]) &gt; <span class="number">0</span> )&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( flag ) cout &lt;&lt;<span class="string">&#x27;T&#x27;</span> &lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//cout &lt;&lt; pol.Point_in_polygon(p1) &lt;&lt; &#x27; &#x27; &lt;&lt;  pol.Point_in_polygon(p2) &lt;&lt; endl;</span></span><br><span class="line">            <span class="keyword">if</span>( pol.<span class="built_in">Point_in_polygon</span>(p1) &amp;&amp; pol.<span class="built_in">Point_in_polygon</span>(p2)  ) cout &lt;&lt; <span class="string">&#x27;T&#x27;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; <span class="string">&#x27;F&#x27;</span> &lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-计算凸包，周长"><a href="#3-6-计算凸包，周长" class="headerlink" title="3.6____计算凸包，周长"></a>3.6____计算凸包，周长</h2><h3 id="Surround-the-Trees"><a href="#Surround-the-Trees" class="headerlink" title="Surround the Trees "></a><a href="https://vjudge.net/problem/HDU-1392">Surround the Trees </a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="built_in">acos</span>( <span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">///Compares a double to zero</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">fabs</span>(x) &lt; eps ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( x &lt; <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">///square of a double</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123; <span class="keyword">return</span> x * x; &#125;</span><br><span class="line"><span class="comment">/////////////////////////////////////////////////</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;               <span class="comment">///no arguments constructor</span></span><br><span class="line">    <span class="built_in">Point</span>(<span class="keyword">double</span> _x,<span class="keyword">double</span> _y) &#123;</span><br><span class="line">        x = _x , y = _y;    <span class="comment">///arguments constructor</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*void input()&#123;</span></span><br><span class="line"><span class="comment">        scanf(&quot;%lf%lf&quot;,&amp;x,&amp;y);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    void output()&#123;</span></span><br><span class="line"><span class="comment">        printf(&quot;%.2f %.2f\n&quot;,x,y);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(y - b.y) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (Point b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span>? <span class="built_in">sgn</span>(y - b.y) &lt; <span class="number">0</span> : x &lt; b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///数量积</span></span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x - b.x , y - b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x + b.x , y + b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x * k , y * k );</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span> &amp;k) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x / k , y / k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///叉积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> ^ (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.y - y * b.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///点积</span></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> * (<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * b.x + y * b.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///线段的长度</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hypot</span>(x,y);  <span class="comment">///&lt;cmath&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///长度的平方</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x * x + y * y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///返回两点的距离</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">distance</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hypot</span>( x - p.x , y - p.y );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///计算 pa 和 pb 的夹角</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">rad</span><span class="params">(Point a,Point b)</span></span>&#123;</span><br><span class="line">        Point p = *<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">fabs</span>( <span class="built_in">atan2</span>( <span class="built_in">fabs</span>( (a-p)^(b-p) )  , (a-p)*(b-p) ) );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///化为长度为r的向量</span></span><br><span class="line">    <span class="function">Point <span class="title">trunc</span><span class="params">(<span class="keyword">double</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> l = <span class="built_in">len</span>();</span><br><span class="line">        <span class="keyword">if</span>( !<span class="built_in">sgn</span>(l) ) <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///逆时针旋转90度</span></span><br><span class="line">    <span class="function">Point <span class="title">rotleft</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(y,-x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///顺时针旋转90度</span></span><br><span class="line">    <span class="function">Point <span class="title">rotright</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(y,-x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///绕着p点逆时针</span></span><br><span class="line">    <span class="function">Point <span class="title">rotata</span><span class="params">(Point p,<span class="keyword">double</span> angle)</span></span>&#123;</span><br><span class="line">        Point v = (*<span class="keyword">this</span>) - p;</span><br><span class="line">        <span class="keyword">double</span> c = <span class="built_in">cos</span>(angle) , s = <span class="built_in">sin</span>(angle);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(p.x + v.x * c - v.y * s , p.y + v.x *s + v.y * c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Line</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Point s,e;</span><br><span class="line">    <span class="built_in">Line</span>()&#123;&#125;</span><br><span class="line">    <span class="built_in">Line</span>( Point _s, Point _e )&#123; s =_s ; e=_e; &#125;</span><br><span class="line">    <span class="comment">///由斜倾角angle与任意直线一点确定直线 y = kx + b;</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">( Point _s, Point _e )</span></span>&#123; s =_s ; e=_e; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Line</span>(Point p,<span class="keyword">double</span> angle)&#123;</span><br><span class="line">        s = p;</span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">sgn</span>(angle - pi/<span class="number">2</span>) == <span class="number">0</span> )    e = (s + <span class="built_in">Point</span>(<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">else</span> e = (s + <span class="built_in">Point</span>(<span class="number">1</span>,<span class="built_in">tan</span>(angle)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///ax + by + c = 0;</span></span><br><span class="line">    <span class="built_in">Line</span>(<span class="keyword">double</span> a,<span class="keyword">double</span> b,<span class="keyword">double</span> c)&#123;</span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">sgn</span>(a) == <span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            s = <span class="built_in">Point</span>(<span class="number">0</span>,-c/b);</span><br><span class="line">            e = <span class="built_in">Point</span>(<span class="number">1</span>,-c/b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">sgn</span>(b) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            s = <span class="built_in">Point</span>(-c/a,<span class="number">0</span>);</span><br><span class="line">            e = <span class="built_in">Point</span>(-c/a,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            s = <span class="built_in">Point</span>(<span class="number">0</span>,-c/b);</span><br><span class="line">            e = <span class="built_in">Point</span>(<span class="number">1</span>,(-c-a)/b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///直线与线段相交判断</span></span><br><span class="line">    <span class="comment">///-*this line -v seg</span></span><br><span class="line">    <span class="comment">///2规范相交，1非规范相交,0不相交</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">linecrossseg</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>( (v.s - e) ^ (s - e) ) * <span class="built_in">sgn</span>(( v.e-e ) ^ (s -e) ) &lt;= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">///点与直线关系</span></span><br><span class="line">    <span class="comment">///1在左侧</span></span><br><span class="line">    <span class="comment">///2在右侧</span></span><br><span class="line">    <span class="comment">///3在直线</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">relation</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c = <span class="built_in">sgn</span>( (p-s) ^ (e -s) );</span><br><span class="line">        <span class="keyword">if</span>(c &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///点在线段上的判断</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">point_on_seg</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>((p-s)^(e-s) ) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>( (p-s)*(p-e) ) &lt;= <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///两向量平行(对应直线平行或重合)</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">parallel</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>( (e-s)^( v.e - v.s ) ) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///两直线关系 0-平行，1-重合，2-相交</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">linecrossline</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (*<span class="keyword">this</span>).<span class="built_in">parallel</span>(v) )</span><br><span class="line">            <span class="keyword">return</span> v.<span class="built_in">relation</span>(s) == <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///得到交点，需先判断直线是否相交</span></span><br><span class="line">    <span class="function">Point <span class="title">crosspoint</span><span class="params">(Line v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> a1 = ( v.e - v.s ) ^ ( s - v.s );</span><br><span class="line">        <span class="keyword">double</span> a2 = ( v.e - v.s ) ^ ( e - v.s );</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>( (s.x * a2 - e.x * a1)/(a2 - a1) , (s.y *a2 - e.y *a1)/(a2 - a1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///两线段相交判断</span></span><br><span class="line">    <span class="comment">///2 规范相交</span></span><br><span class="line">    <span class="comment">///1 非规范相交</span></span><br><span class="line">    <span class="comment">///0 不想交</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">segcrossseg</span><span class="params">(Line v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> d1 = <span class="built_in">sgn</span>((e - s) ^ (v.s - s));</span><br><span class="line">        <span class="keyword">int</span> d2 = <span class="built_in">sgn</span>((e - s) ^ (v.e - s));</span><br><span class="line">        <span class="keyword">int</span> d3 = <span class="built_in">sgn</span>((v.e - v.s) ^ (s - v.s));</span><br><span class="line">        <span class="keyword">int</span> d4 = <span class="built_in">sgn</span>((v.e - v.s) ^ (e - v.s));</span><br><span class="line">        <span class="keyword">if</span> ((d1 ^ d2) == <span class="number">-2</span> &amp;&amp; (d3 ^ d4) == <span class="number">-2</span>)<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> (d1 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((v.s - s) * (v.s - e)) &lt;= <span class="number">0</span>) ||</span><br><span class="line">            (d2 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((v.e - s) * (v.e - e)) &lt;= <span class="number">0</span>) ||</span><br><span class="line">            (d3 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((s - v.s) * (s - v.e)) &lt;= <span class="number">0</span>) ||</span><br><span class="line">            (d4 == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>((e - v.s) * (e - v.e)) &lt;= <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">triangle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Point A,B,C;</span><br><span class="line">    Line a,b,c;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">triangle</span>()&#123;&#125;</span><br><span class="line">    <span class="built_in">triangle</span>(Point _A,Point _B,Point _C)&#123; A = _A ; B = _B ; C = _C;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///求重心</span></span><br><span class="line">    <span class="function">Point <span class="title">incenter</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>( ( A.x + B.x + C.x ) / <span class="number">3</span>, ( A.y + B.y + C.y ) / <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxp = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxl = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">polygon</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> n;      <span class="comment">///点的数量</span></span><br><span class="line">    Point p[maxp];</span><br><span class="line">    Line l[maxl];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">cmp</span>&#123;</span></span><br><span class="line">        Point p;</span><br><span class="line">        <span class="built_in">cmp</span>(<span class="keyword">const</span> Point &amp;p0)&#123; p = p0;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">( <span class="keyword">const</span> Point &amp;aa ,<span class="keyword">const</span> Point &amp;bb)</span></span>&#123;</span><br><span class="line">            Point a = aa,b = bb;</span><br><span class="line">            <span class="keyword">int</span> d = <span class="built_in">sgn</span>( (a-p)^(b-p) );</span><br><span class="line">            <span class="keyword">if</span>(d == <span class="number">0</span>)  <span class="keyword">return</span> <span class="built_in">sgn</span>( a.<span class="built_in">distance</span>(p) - b.<span class="built_in">distance</span>(p)) &lt; <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> d &gt; <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">///极角排序</span></span><br><span class="line">    <span class="comment">///mi为最左下角的点</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">norm</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Point mi = p[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i ++) mi = <span class="built_in">min</span>(mi,p[i]);</span><br><span class="line">        <span class="built_in">sort</span>(p, p + n, <span class="built_in">cmp</span>(mi) );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/// 判断任意点与多边形的关系</span></span><br><span class="line">    <span class="comment">/// 3在顶点上</span></span><br><span class="line">    <span class="comment">/// 2在边上</span></span><br><span class="line">    <span class="comment">/// 1在内部</span></span><br><span class="line">    <span class="comment">/// 0在外面</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Point_in_polygon</span><span class="params">(Point tep)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( p[i] == tep ) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( l[i].<span class="built_in">point_on_seg</span>(tep) ) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tecnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j = (i + <span class="number">1</span>) % n;</span><br><span class="line">            <span class="keyword">int</span> c = <span class="built_in">sgn</span>( (tep - p[j]) ^ (p[i] - p[j]) );</span><br><span class="line">            <span class="keyword">int</span> u = <span class="built_in">sgn</span>( p[i].y - tep.y );</span><br><span class="line">            <span class="keyword">int</span> v = <span class="built_in">sgn</span>( p[j].y - tep.y );</span><br><span class="line">            <span class="keyword">if</span>( c &gt; <span class="number">0</span> &amp;&amp; u &lt; <span class="number">0</span> &amp;&amp; v &gt;=<span class="number">0</span> ) tecnt ++;</span><br><span class="line">            <span class="keyword">if</span>( c &lt; <span class="number">0</span> &amp;&amp; u &gt;= <span class="number">0</span> &amp;&amp; v &lt; <span class="number">0</span> ) tecnt --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tecnt != <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 得到凸包</span></span><br><span class="line">    <span class="comment">/// 得到的凸包里的点编号是 0 ~ n-1 的</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getconvex</span><span class="params">(polygon &amp;convex)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(p , p + n);</span><br><span class="line">        convex.n = n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="built_in">min</span>(n,<span class="number">2</span>) ; i++)&#123;</span><br><span class="line">            convex.p[i] = p[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">///特判</span></span><br><span class="line">        <span class="keyword">if</span>( convex.n == <span class="number">2</span> &amp;&amp; (convex.p[<span class="number">0</span>] == convex.p[<span class="number">1</span>]) ) convex.n--;</span><br><span class="line">        <span class="keyword">if</span>( n &lt;= <span class="number">2</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> &amp;top = convex.n;</span><br><span class="line">        top = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(top &amp;&amp; <span class="built_in">sgn</span>( (convex.p[top] - p[i]) ^ (convex.p[top<span class="number">-1</span>] - p[i])) &lt;= <span class="number">0</span> ) top --;</span><br><span class="line">            convex.p[++top] = p[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> temp = top;</span><br><span class="line">        convex.p[++top] = p[n<span class="number">-2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n - <span class="number">3</span>; i &gt;=<span class="number">0</span> ; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>( top!=temp &amp;&amp; <span class="built_in">sgn</span>( (convex.p[top] - p[i]) ^ (convex.p[top<span class="number">-1</span>] - p[i]) ) &lt;=<span class="number">0</span> ) top--;</span><br><span class="line">            convex.p[++top] = p[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( convex.n == <span class="number">2</span>&amp;&amp; ( convex.p[<span class="number">0</span>] == convex.p[<span class="number">1</span>]) ) convex.n --;    <span class="comment">///特判</span></span><br><span class="line">        convex.<span class="built_in">norm</span>();<span class="comment">///得到的是顺时针的点,排序后逆时针</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///判断是不是凸多边形</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isconvex</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> s[<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">memset</span>(s,<span class="literal">false</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(s));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> j = (i + <span class="number">1</span>) % n;</span><br><span class="line">            <span class="keyword">int</span> k = (j + <span class="number">1</span>) % n;</span><br><span class="line">            s[ <span class="built_in">sgn</span>((p[j] - p[i]) ^ (p[k]-p[i]) ) + <span class="number">1</span>] =<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///得到周长</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getcircumference</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            sum += p[i].<span class="built_in">distance</span>( p[(i + <span class="number">1</span>)%n] );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///得到面积</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getarea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;  i &lt; n ; i++)&#123;</span><br><span class="line">            sum += ( p[i]^p[ (i+<span class="number">1</span>)%n ] );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">fabs</span>(sum)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    <span class="keyword">while</span>( <span class="literal">true</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>( n== <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        polygon pol;</span><br><span class="line">        pol.n = n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;pol.p[i].x,&amp;pol.p[i].y);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt;n ; i++) pol.l[i].<span class="built_in">input</span>( pol.p[i] , pol.p[ (i + <span class="number">1</span>)%n ] );</span><br><span class="line"></span><br><span class="line">        polygon poly;</span><br><span class="line">        pol.<span class="built_in">getconvex</span>(poly);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//printf(&quot;%d\n&quot;,poly.n) ;</span></span><br><span class="line">        <span class="comment">//printf(&quot;%.2f\n&quot;,pol.getcircumference());</span></span><br><span class="line">        <span class="comment">///如果只有两个点要特判，看计算凸包的公式就明白了</span></span><br><span class="line">        <span class="keyword">if</span>( poly.n == <span class="number">2</span> ) <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,poly.<span class="built_in">getcircumference</span>()/<span class="number">2</span> );</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,poly.<span class="built_in">getcircumference</span>() );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-7-平面几何"><a href="#3-7-平面几何" class="headerlink" title="3.7____平面几何"></a>3.7____平面几何</h2><h3 id="Keiichi-Tsuchiya-the-Drift-King"><a href="#Keiichi-Tsuchiya-the-Drift-King" class="headerlink" title=" Keiichi Tsuchiya the Drift King"></a><a href="https://vjudge.net/problem/Gym-102028D"> Keiichi Tsuchiya the Drift King</a></h3><blockquote><p>  2018焦作——ICPC</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">fabs</span>(x) &lt; eps ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( x &lt; <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> a,b,d,r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf%lf&quot;</span>,&amp;a,&amp;b,&amp;r,&amp;d);</span><br><span class="line">        <span class="keyword">double</span> delta = d * pi / <span class="number">180.0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> stand = <span class="built_in">atan</span>( b/ (a+r) );</span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">sgn</span>( delta - stand ) &gt;= <span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.12f\n&quot;</span>,<span class="built_in">sqrt</span>( b*b + (a + r)*(a + r) ) - r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> ans = <span class="built_in">sin</span>(delta) * (b - (a+r)*<span class="built_in">tan</span>(delta)) + (a+r)/<span class="built_in">cos</span>(delta) - r;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.12f\n&quot;</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-8-最小圆覆盖"><a href="#3-8-最小圆覆盖" class="headerlink" title="3.8____最小圆覆盖"></a>3.8____最小圆覆盖</h2><h3 id="Buried-memory"><a href="#Buried-memory" class="headerlink" title="Buried memory"></a><a href="https://vjudge.net/problem/HDU-3007">Buried memory</a></h3><blockquote><p>   HDU_3007</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">fabs</span>(x) &lt; eps ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( x &lt; <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;</span><br><span class="line">    <span class="built_in">Point</span>(<span class="keyword">double</span> _x,<span class="keyword">double</span> _y)&#123; x = _x;y=_y; &#125;</span><br><span class="line">&#125;p[<span class="number">510</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">dis</span><span class="params">(Point a,Point b )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">hypot</span>( a.x - b.x,a.y - b.y );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///求三角形外接圆圆心</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">circle_certer</span><span class="params">(<span class="keyword">const</span> Point a,<span class="keyword">const</span> Point b,<span class="keyword">const</span> Point c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Point center;</span><br><span class="line">    <span class="keyword">double</span> a1 = b.x - a.x, b1 = b.y - a.y,c1 = (a1 * a1 + b1 * b1) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">double</span> a2 = c.x - a.x, b2 = c.y - a.y,c2 = (a2 * a2 + b2 *b2) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">double</span> d = a1 * b2 - a2 *b1;</span><br><span class="line">    center.x = a.x + (c1 * b2 - c2 *b1) /d;</span><br><span class="line">    center.y = a.y + (a1 * c2 - a2 *c1) /d;</span><br><span class="line">    <span class="keyword">return</span> center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">min_cover_circle</span><span class="params">(Point &amp;c,<span class="keyword">double</span> &amp;r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">random_shuffle</span>(p,p+n);                          <span class="comment">///将点的排列顺序随机化，降低枚举的时间复杂度</span></span><br><span class="line">    c = p[<span class="number">0</span>],r = <span class="number">0</span>;                                 <span class="comment">///从第一个点开始，</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n ; i++ )</span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">sgn</span>( <span class="built_in">dis</span>(p[i],c) - r ) &gt; <span class="number">0</span> )&#123;           <span class="comment">///新的点，在原来那个圆的外面</span></span><br><span class="line">            c = p[i],r = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i ; j++)&#123;            <span class="comment">///从新检查前面的点是否都在圆内</span></span><br><span class="line">                 <span class="keyword">if</span>( <span class="built_in">sgn</span>( <span class="built_in">dis</span>(p[j],c) - r ) &gt; <span class="number">0</span> )&#123;  <span class="comment">///如果之前的点在新园的外面，从新定圆</span></span><br><span class="line">                    c.x = (p[i].x + p[j].x ) /<span class="number">2</span>;</span><br><span class="line">                    c.y = (p[i].y + p[j].y ) /<span class="number">2</span>;</span><br><span class="line">                    r = <span class="built_in">dis</span>( p[j],c );</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span> ;  k &lt; j ; k ++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>( <span class="built_in">sgn</span>(<span class="built_in">dis</span>(p[k],c) - r)  &gt; <span class="number">0</span>)&#123;<span class="comment">///如果两点定的点不能满足，则选择3个点来确定</span></span><br><span class="line">                            c = <span class="built_in">circle_certer</span>(p[i],p[j],p[k]);</span><br><span class="line">                            r = <span class="built_in">dis</span>(p[i],c);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) &amp;&amp; n != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Point ans;</span><br><span class="line">        <span class="keyword">double</span> ansr;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>,&amp;p[i].x,&amp;p[i].y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">min_cover_circle</span>(ans,ansr);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f %.2f %.2f\n&quot;</span>,ans.x,ans.y,ansr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-9-空凸包（计算几何-dp）"><a href="#3-9-空凸包（计算几何-dp）" class="headerlink" title="3.9____空凸包（计算几何 + dp）"></a>3.9____空凸包（计算几何 + dp）</h2><h3 id="Empty-Convex-Polygons"><a href="#Empty-Convex-Polygons" class="headerlink" title="Empty Convex Polygons)"></a><a href="https://vjudge.net/problem/HDU-6219">Empty Convex Polygons</a>)</h3><blockquote><p>  ICPC_2017沈阳</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> type_p;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">510</span>;</span><br><span class="line"><span class="keyword">double</span> dp[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">eq</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(x-y)&lt;eps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">eq</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x==y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span></span><br><span class="line">    type_p x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">type_p <span class="title">xmult</span><span class="params">(point a, point b, point o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a.x-o.x)*(o.y-b.y)-(a.y-o.y)*(o.x-b.x);<span class="comment">//b at ao left if negative, at right if positive</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">type_p <span class="title">dist</span><span class="params">(point a, point b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);</span><br><span class="line">&#125;</span><br><span class="line">point o;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp_angle</span><span class="params">(point a,point b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">eq</span>(<span class="built_in">xmult</span>(a,b,o),<span class="number">0.0</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dist</span>(a,o)&lt;<span class="built_in">dist</span>(b,o);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">xmult</span>(a,o,b)&gt;<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Input:  p:  Point set</span></span><br><span class="line"><span class="comment"> pn: size of the point set</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Output: the area of the largest empty convex</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">empty_convex</span><span class="params">(point *p, <span class="keyword">int</span> pn)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;pn; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;pn; j++)&#123;</span><br><span class="line">            dp[i][j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;pn; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> j = i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(j&gt;=<span class="number">0</span> &amp;&amp; <span class="built_in">eq</span>(<span class="built_in">xmult</span>(p[i], p[j], o),<span class="number">0.0</span>))j--;<span class="comment">//coline</span></span><br><span class="line">        <span class="keyword">bool</span> flag= j==i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(j&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> k = j<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(k &gt;= <span class="number">0</span> &amp;&amp; <span class="built_in">xmult</span>(p[i],p[k],p[j])&gt;<span class="number">0</span>)k--;</span><br><span class="line">            <span class="keyword">double</span> area = <span class="built_in">fabs</span>(<span class="built_in">xmult</span>(p[i],p[j],o))/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(k &gt;= <span class="number">0</span>)area+=dp[j][k];</span><br><span class="line">            <span class="keyword">if</span>(flag) dp[i][j]=area;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,area);</span><br><span class="line">            j=k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;i; j++) &#123;</span><br><span class="line">                dp[i][j] = <span class="built_in">max</span>(dp[i][j],dp[i][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">largest_empty_convex</span><span class="params">(point *p, <span class="keyword">int</span> pn)</span> </span>&#123;</span><br><span class="line">    point data[maxn];</span><br><span class="line">    <span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;pn; i++) &#123;</span><br><span class="line">        o=p[i];</span><br><span class="line">        <span class="keyword">int</span> dn=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;pn; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p[j].y&gt;o.y||(p[j].y==o.y&amp;&amp;p[j].x&gt;=o.x))</span><br><span class="line">            &#123;</span><br><span class="line">                data[dn++]=p[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(data, data+dn, cmp_angle);</span><br><span class="line">        ans=<span class="built_in">max</span>(ans, <span class="built_in">empty_convex</span>(data, dn));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    point p[<span class="number">110</span>];</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> pn;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;pn);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;pn; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>,&amp;p[i].x,&amp;p[i].y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1f\n&quot;</span>,<span class="built_in">largest_empty_convex</span>(p,pn));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-10-三角形"><a href="#3-10-三角形" class="headerlink" title="3.10 三角形"></a>3.10 三角形</h3><h3 id="Mahmoud-and-a-Triangle-Problem-766B-Codeforces"><a href="#Mahmoud-and-a-Triangle-Problem-766B-Codeforces" class="headerlink" title="[Mahmoud and a Triangle](Problem - 766B - Codeforces)"></a>[Mahmoud and a Triangle](<a href="https://codeforces.com/problemset/problem/766/B">Problem - 766B - Codeforces</a>)</h3><p> <strong>题意:</strong> 给你n个线段长度，是否可以中找出3个线段组成三角形 (1e5)</p><p>先sort一下，我们知道三角形判断有 $|a-b |&lt; c &lt; |a+b|$ 这里只需要判断 短的两个边是不是大于长的那个边就好了，sort了之后相邻的3个边，一定满足最长的大于最短的两个的<em><strong>绝对值之差</strong></em></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(a,a+n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>( a[i] &lt; a[i<span class="number">-1</span>] + a[i <span class="number">-2</span>] )&#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(flag)cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Vasya-and-Triangle-Problem-1030D-Codeforces"><a href="#Vasya-and-Triangle-Problem-1030D-Codeforces" class="headerlink" title="[Vasya and Triangle](Problem - 1030D - Codeforces)"></a>[Vasya and Triangle](<a href="https://codeforces.com/problemset/problem/1030/D">Problem - 1030D - Codeforces</a>)</h3><p><strong>题意:</strong>  给你n,m,k，找到  $ 1 ≤ x_1 , x_2 ,x_3 ≤ n , 1 ≤ y_1 , y_2 ,y_3 ≤ m$ 三个点，三个点必须是整数，构成三角形，使得这个三角形的面积$S = \frac{nm}{k}$ ,找不到的话输出$NO$</p><p><strong>思路：</strong>用坐标系左下角的$Rt\Delta$ 来做输出的三角形，因为三个点必须是整数，所以 $n,m$一定可除尽$k$ ，之后用gcd来分别除到，y轴的边，x轴的边就可以了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    LL n,m,k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    <span class="keyword">if</span>( <span class="number">2LL</span>*n*m % k != <span class="number">0</span> )&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt;endl;</span><br><span class="line">        <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt;endl;</span><br><span class="line">        <span class="keyword">if</span>( n % k == <span class="number">0</span> )&#123;</span><br><span class="line">            n*= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>( m % k == <span class="number">0</span> )&#123;</span><br><span class="line">            m*=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> n *=<span class="number">2</span>;</span><br><span class="line">        LL g = __gcd(n,k);</span><br><span class="line">        n = n / g , k = k / g;</span><br><span class="line">        m = m / k;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; m &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; n &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="4-组合数"><a href="#4-组合数" class="headerlink" title="4____组合数"></a>4____组合数</h1><h3 id="Close-Tuples-hard-version"><a href="#Close-Tuples-hard-version" class="headerlink" title="Close Tuples (hard version)"></a><a href="https://vjudge.net/problem/CodeForces-1462E2">Close Tuples (hard version)</a></h3><h1 id="5-三分"><a href="#5-三分" class="headerlink" title="5____三分"></a>5____三分</h1><h3 id="The-Moving-Points"><a href="#The-Moving-Points" class="headerlink" title="The Moving Points"></a><a href="https://vjudge.net/contest/422089#problem/B">The Moving Points</a></h3><p>​        那<code>模拟退火</code> 写的…</p><p>​        <em><strong><font color = red>几个需要注意的点</font></strong></em></p><ol><li><p>   时间的最大范围题目没有给，要开到1e8</p></li><li><p><em><strong>delta</strong></em>设置太大的话会超时</p><p>   <img src="C:\Users\Hoppz\AppData\Roaming\Typora\typora-user-images\image-20210326144613368.png" alt="image-20210326144613368"></p><p>   $ 1996 ms $ 对应的是 $delte = 0.98$ （最大的时间是3s）</p><p>   $ 826 ms $ 对应的是 $delte = 0.95$ </p><p>   $ 405 ms $ 对应的是 $delte = 0.90$ </p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-5</span>;</span><br><span class="line"><span class="keyword">int</span> n,t;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="keyword">double</span> vx,vy;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">distance</span> <span class="params">(<span class="keyword">const</span> Point &amp;b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">hypot</span>( x - b.x , y - b.y );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;p[<span class="number">310</span>],chp[<span class="number">310</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">mindis</span><span class="params">(<span class="keyword">double</span> ti)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        chp[i].x = p[i].x + p[i].vx * ti;</span><br><span class="line">        chp[i].y = p[i].y + p[i].vy * ti;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> mindiste = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =  <span class="number">0</span> ; i &lt; n ; i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)&#123;</span><br><span class="line">            mindiste = <span class="built_in">max</span>(mindiste, chp[i].<span class="built_in">distance</span>(chp[j]) );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> mindiste;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> T = <span class="number">1e8</span>;</span><br><span class="line">    <span class="keyword">double</span> delta = <span class="number">0.90</span>;</span><br><span class="line">    <span class="keyword">double</span> nowT = <span class="number">1e4</span>;</span><br><span class="line">    <span class="keyword">double</span> nowD = <span class="built_in">mindis</span>(nowT);</span><br><span class="line">    <span class="keyword">double</span> f[<span class="number">2</span>] = &#123;<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">    <span class="keyword">while</span>( T &gt; eps )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> newT = nowT + T * f[<span class="built_in">rand</span>()%<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">if</span>( newT &gt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> newD = <span class="built_in">mindis</span>(newT);</span><br><span class="line">            <span class="keyword">if</span>( nowD - newD &gt;  eps )&#123; nowT = newT; nowD = newD; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        T *= delta;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f %.2f\n&quot;</span>,nowT,nowD);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">1</span>; i &lt;= t ; i++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf%lf&quot;</span>,&amp;p[i].x,&amp;p[i].y,&amp;p[i].vx,&amp;p[i].vy);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case #%d: &quot;</span>,i);</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Restorer-Distance"><a href="#Restorer-Distance" class="headerlink" title="Restorer Distance"></a><a href="http://codeforces.com/contest/1355/problem/E">Restorer Distance</a></h3><h2 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h2><h3 id="卡精度Problem-D-Codeforces"><a href="#卡精度Problem-D-Codeforces" class="headerlink" title="卡精度Problem - D - Codeforces"></a>卡精度<a href="https://codeforces.com/gym/102780/problem/D">Problem - D - Codeforces</a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line">LL a, b;</span><br><span class="line"><span class="function">LL <span class="title">f</span><span class="params">(LL l, LL r)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt; r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LL mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">double</span> s=<span class="built_in"><span class="keyword">double</span></span>(<span class="built_in">log</span>(mid)/<span class="built_in">log</span>(a));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">abs</span>(s * b - mid) &lt; <span class="number">0.00000000001</span>) <span class="comment">///看是否有比他更小的存在 </span></span><br><span class="line">    &#123;</span><br><span class="line">        LL ans = <span class="built_in">f</span>(<span class="number">1</span>, mid - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (ans) <span class="keyword">return</span> ans;</span><br><span class="line">        <span class="keyword">return</span> mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mid &gt; s * b) </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">f</span>(l, mid - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">f</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">f</span>(<span class="number">1</span>, <span class="number">1e18</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-并查集"><a href="#6-并查集" class="headerlink" title="6____并查集"></a>6____并查集</h1><h3 id="Prefix-Enlightenment-带权并查集"><a href="#Prefix-Enlightenment-带权并查集" class="headerlink" title="Prefix Enlightenment ( 带权并查集 )"></a><a href="http://codeforces.com/contest/1290/problem/C">Prefix Enlightenment</a> ( 带权并查集 )</h3><h1 id="7-悬线法（最大子矩阵）"><a href="#7-悬线法（最大子矩阵）" class="headerlink" title="7____悬线法（最大子矩阵）"></a>7____悬线法（最大子矩阵）</h1><h3 id="Largest-Common-Submatrix"><a href="#Largest-Common-Submatrix" class="headerlink" title="Largest Common Submatrix"></a><a href="https://vjudge.net/contest/424937#problem/J">Largest Common Submatrix</a></h3><h3 id="棋盘制作"><a href="#棋盘制作" class="headerlink" title="棋盘制作"></a><a href="https://www.luogu.com.cn/problem/P1169">棋盘制作</a></h3><h3 id="玉蟾宫-BZOJ-3039"><a href="#玉蟾宫-BZOJ-3039" class="headerlink" title="玉蟾宫 BZOJ[3039]"></a>玉蟾宫 BZOJ[3039]</h3><h1 id="8-线段树"><a href="#8-线段树" class="headerlink" title="8____线段树"></a>8<a href="https://blog.csdn.net/weixin_45799835/article/details/110069469">____线段树</a></h1><h2 id="单点更新"><a href="#单点更新" class="headerlink" title="单点更新"></a>单点更新</h2><h3 id="敌兵布阵"><a href="#敌兵布阵" class="headerlink" title="敌兵布阵"></a><a href="https://vjudge.net/problem/HDU-1166">敌兵布阵</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> sum;</span><br><span class="line">&#125;T[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T[rt].sum = T[rt &lt;&lt; <span class="number">1</span>].sum + T[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T[rt] = &#123;l,r,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>( T[rt].l == T[rt].r )&#123;</span><br><span class="line">        T[rt].sum = a[ T[rt].l ];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(rt &lt;&lt; <span class="number">1</span>,l,mid),<span class="built_in">build</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( T[rt].l == T[rt].r &amp;&amp; T[rt].r == pos )&#123;</span><br><span class="line">        T[rt].sum += val;</span><br><span class="line">        a[ pos ] += val;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mid = ( T[rt].l + T[rt].r ) &gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>( pos &lt;= mid ) <span class="built_in">update</span>(rt &lt;&lt;<span class="number">1</span>,pos,val);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,pos,val);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= T[rt].l &amp;&amp; r &gt;= T[rt].r )&#123;</span><br><span class="line">        <span class="keyword">return</span> T[rt].sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mid = (T[rt].l + T[rt].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> son = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= mid ) son += <span class="built_in">query</span>(rt &lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">    <span class="keyword">if</span>( r &gt; mid ) son += <span class="built_in">query</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">    <span class="keyword">return</span> son;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> c = <span class="number">1</span>; c &lt;= t ; c++)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Case &quot;</span>&lt;&lt;c&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            cin &gt;&gt; a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        for(int i =0  ; i&lt; 32 ; i++)&#123;</span></span><br><span class="line"><span class="comment">//            cout &lt;&lt; T[i].sum &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        string s;</span><br><span class="line">        <span class="keyword">while</span>(cin &gt;&gt;s)&#123;</span><br><span class="line">            <span class="keyword">if</span>( s == <span class="string">&quot;End&quot;</span> ) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">int</span> x,y;</span><br><span class="line">            cin &gt;&gt;x &gt;&gt;y;</span><br><span class="line">            <span class="keyword">if</span>( s == <span class="string">&quot;Add&quot;</span> )&#123;</span><br><span class="line">                <span class="built_in">update</span>( <span class="number">1</span>,x,y );</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>( s == <span class="string">&quot;Sub&quot;</span> )&#123;</span><br><span class="line">                <span class="built_in">update</span>(<span class="number">1</span>,x,y*<span class="number">-1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cout &lt;&lt; <span class="built_in">query</span>(<span class="number">1</span>,x,y) &lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="I-Hate-it"><a href="#I-Hate-it" class="headerlink" title="I Hate it"></a><a href="https://vjudge.net/problem/HDU-1754">I Hate it</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> A[N],tree[N*<span class="number">4</span> + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[rt] = <span class="built_in">max</span>(tree[rt &lt;&lt; <span class="number">1</span>] ,tree[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>] );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l , <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l == r )</span><br><span class="line">    &#123;</span><br><span class="line">         tree[rt] = A[r];</span><br><span class="line">        <span class="comment">// cout &lt;&lt;tree[rt] &lt;&lt; &#x27; &#x27; &lt;&lt; A[r] &lt;&lt; &#x27; &#x27; &lt;&lt; r&lt;&lt;endl;</span></span><br><span class="line">         <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">build</span>( rt &lt;&lt; <span class="number">1</span> , l ,mid );</span><br><span class="line">        <span class="built_in">build</span>( rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span> , mid + <span class="number">1</span>, r );</span><br><span class="line">        <span class="built_in">push_up</span>(rt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r ,<span class="keyword">int</span> pos,<span class="keyword">int</span> val )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l == r &amp;&amp; l == pos )</span><br><span class="line">    &#123;</span><br><span class="line">        A[pos] = val;</span><br><span class="line">        tree[rt] = val;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mid = ( l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>( pos &lt;= mid ) <span class="built_in">update</span>( rt &lt;&lt; <span class="number">1</span>,l, mid , pos ,val );</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>( rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span> , mid + <span class="number">1</span> ,r, pos,val);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rangeMax</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> start,<span class="keyword">int</span> ed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( r &lt; start || l &gt; ed ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( start &lt;= l &amp;&amp; ed &gt;= r ) <span class="keyword">return</span> tree[rt];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = ( l + r ) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> l_son,r_son;</span><br><span class="line">        l_son = r_son = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>( start &lt;= mid ) l_son = <span class="built_in">rangeMax</span>( rt&lt;&lt; <span class="number">1</span>, l,mid,start,ed );</span><br><span class="line">        <span class="keyword">if</span>( ed &gt;= mid ) r_son = <span class="built_in">rangeMax</span>( rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span> ,mid +<span class="number">1</span> ,r,start,ed );</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>( l_son,r_son );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n &gt;&gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++) cin &gt;&gt; A[i];</span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">        <span class="keyword">while</span>(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> cmd;</span><br><span class="line">            <span class="keyword">int</span> x,y;</span><br><span class="line">            cin &gt;&gt; cmd &gt;&gt; x &gt;&gt; y;</span><br><span class="line">            <span class="keyword">if</span>( cmd == <span class="string">&#x27;Q&#x27;</span> )&#123;</span><br><span class="line">                cout &lt;&lt; <span class="built_in">rangeMax</span>(<span class="number">1</span>,<span class="number">1</span>,n,x,y) &lt;&lt; endl;</span><br><span class="line">                <span class="comment">//for(int i = 1; i &lt;= 10 ; i++)cout &lt;&lt; tree[i] &lt;&lt;endl;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>( cmd == <span class="string">&#x27;U&#x27;</span> )&#123;</span><br><span class="line">                <span class="built_in">update</span>(<span class="number">1</span>,<span class="number">1</span>,n,x,y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最大数"><a href="#最大数" class="headerlink" title="最大数"></a><a href="https://www.acwing.com/problem/content/1277/">最大数</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> sum;</span><br><span class="line">&#125;T[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T[rt].sum = <span class="built_in">max</span>(T[rt &lt;&lt; <span class="number">1</span>].sum , T[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T[rt] = &#123;l,r,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>( T[rt].l == T[rt].r )&#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(rt &lt;&lt; <span class="number">1</span>,l,mid),<span class="built_in">build</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( T[rt].l == T[rt].r &amp;&amp; T[rt].r == pos )&#123;</span><br><span class="line">        T[rt].sum = val;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mid = ( T[rt].l + T[rt].r ) &gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>( pos &lt;= mid ) <span class="built_in">update</span>(rt &lt;&lt;<span class="number">1</span>,pos,val);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,pos,val);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= T[rt].l &amp;&amp; r &gt;= T[rt].r )&#123;</span><br><span class="line">        <span class="keyword">return</span> T[rt].sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mid = (T[rt].l + T[rt].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> l_son = <span class="number">0</span>,r_son = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= mid ) l_son = <span class="built_in">query</span>(rt &lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">    <span class="keyword">if</span>( r &gt; mid ) r_son += <span class="built_in">query</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(l_son,r_son);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,p,res = <span class="number">0</span> ,cnt = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; p;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        cin&gt;&gt; c&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>( c == <span class="string">&#x27;A&#x27;</span> )&#123;</span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>,cnt++, (x+res)%p );</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res = <span class="built_in">query</span>( <span class="number">1</span>,cnt - x,cnt<span class="number">-1</span> );</span><br><span class="line">            cout &lt;&lt;res &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Tunnel-Warfare"><a href="#Tunnel-Warfare" class="headerlink" title="Tunnel Warfare"></a><a href="https://vjudge.net/problem/HDU-1540">Tunnel Warfare</a></h3><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="第八大奇迹"><a href="#第八大奇迹" class="headerlink" title="第八大奇迹"></a><a href="https://www.lanqiao.cn/problems/242/learning/">第八大奇迹</a></h3><p><a href="https://blog.csdn.net/chenyume/article/details/104444804?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control">(3条消息) 19蓝桥国赛B组C/C++ I第八大奇迹_cy41的博客-CSDN博客</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[<span class="number">29</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m8[maxn&lt;&lt;<span class="number">2</span>|<span class="number">1</span>][<span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> k[],<span class="keyword">int</span> k1[],<span class="keyword">int</span> k2[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p=<span class="number">1</span>,q=<span class="number">1</span>,id=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=<span class="number">8</span>&amp;&amp;q&lt;=<span class="number">8</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k1[p]&gt;=k2[q]) b[id++]=k1[p++];</span><br><span class="line">        <span class="keyword">else</span> b[id++]=k2[q++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;=<span class="number">8</span>) b[id++]=k1[p++];</span><br><span class="line">    <span class="keyword">while</span>(q&lt;=<span class="number">8</span>) b[id++]=k2[q++];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>;++i) k[i]=b[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">upd</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k,<span class="keyword">int</span> id,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r) &#123;m8[k][<span class="number">1</span>]=val;<span class="keyword">return</span> ;&#125;</span><br><span class="line">    <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(id&lt;=mid) <span class="built_in">upd</span>(l,mid,k&lt;&lt;<span class="number">1</span>,id,val);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">upd</span>(mid+<span class="number">1</span>,r,k&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,id,val);</span><br><span class="line">    <span class="built_in">calc</span>(m8[k],m8[k&lt;&lt;<span class="number">1</span>],m8[k&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">ask</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k,<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=L&amp;&amp;r&lt;=R) <span class="keyword">return</span> m8[k];</span><br><span class="line">    <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(R&lt;=mid) <span class="keyword">return</span> <span class="built_in">ask</span>(l,mid,k&lt;&lt;<span class="number">1</span>,L,R);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(L&gt;mid) <span class="keyword">return</span> <span class="built_in">ask</span>(mid+<span class="number">1</span>,r,k&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,L,R);</span><br><span class="line">    <span class="keyword">int</span>* k1=<span class="built_in">ask</span>(l,mid,k&lt;&lt;<span class="number">1</span>,L,R);</span><br><span class="line">    <span class="keyword">int</span>* k2=<span class="built_in">ask</span>(mid+<span class="number">1</span>,r,k&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,L,R);</span><br><span class="line">    <span class="keyword">int</span> *kk=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>];</span><br><span class="line">    <span class="built_in">calc</span>(kk,k1,k2);</span><br><span class="line">    <span class="keyword">return</span> kk;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">9</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,q,id,l,r,x;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s%d%d&quot;</span>,s,&amp;l,&amp;r);</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">&#x27;C&#x27;</span>) <span class="built_in">upd</span>(<span class="number">1</span>,n,<span class="number">1</span>,l,r);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">ask</span>(<span class="number">1</span>,n,<span class="number">1</span>,l,r)[<span class="number">8</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我的代码（超时，效果没有问题）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">8</span>];</span><br><span class="line">&#125;t[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> ta[],<span class="keyword">int</span> la[],<span class="keyword">int</span> ra[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">sort</span>(la ,la+<span class="number">8</span> );</span><br><span class="line">    <span class="built_in">sort</span>(ra ,ra+<span class="number">8</span> );</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">7</span>,r = <span class="number">7</span>,idx = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">while</span>(idx &gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(la[l] &gt;= ra[r])&#123;</span><br><span class="line">            ta[idx--] = la[l--];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  ta[idx--] = ra[r--];</span><br><span class="line">        <span class="comment">///</span></span><br><span class="line">        <span class="keyword">if</span>( l == <span class="number">-1</span> &amp;&amp; idx &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>( idx &lt; <span class="number">8</span> &amp;&amp; r &gt;=<span class="number">0</span> )&#123;</span><br><span class="line">                ta[idx--] = la[l--];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( r == <span class="number">-1</span> &amp;&amp; idx &gt;=<span class="number">0</span> )&#123;</span><br><span class="line">            <span class="keyword">while</span>(idx &lt; <span class="number">8</span> &amp;&amp; l &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                ta[idx--] = ra[r--];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t[rt].l = l , t[rt].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;  i &lt; <span class="number">8</span> ; i++)&#123;</span><br><span class="line">            t[rt].num[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(rt &lt;&lt; <span class="number">1</span>,l,mid),<span class="built_in">build</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> loc,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( t[rt].l == t[rt].r &amp;&amp; t[rt].l == loc )&#123;</span><br><span class="line">        t[rt].num[<span class="number">7</span>] = val;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = t[rt].l +t[rt].r &gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>( loc &lt;= mid ) <span class="built_in">update</span>( rt &lt;&lt; <span class="number">1</span>, loc ,val );</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>( rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,loc ,val );</span><br><span class="line">    <span class="built_in">push_up</span>(t[rt].num , t[rt&lt;&lt;<span class="number">1</span>].num,t[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span>* <span class="title">rangeQuery</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; rt &lt;&lt; &#x27; &#x27; &lt;&lt;t[rt].l &lt;&lt; &#x27; &#x27; &lt;&lt; t[rt].r &lt;&lt;&#x27; &#x27;&lt;&lt; l &lt;&lt;&#x27; &#x27; &lt;&lt;r &lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span>( l &lt;= t[rt].l &amp;&amp; r &gt;= t[rt].r )&#123;</span><br><span class="line">        <span class="keyword">return</span> t[rt].num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//if( t[rt].l &gt;r ||t[rt].r &lt; l ) return new int[8];</span></span><br><span class="line">    <span class="keyword">int</span> mid = t[rt].l +t[rt].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> *la= <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">8</span>],*ra= <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt; <span class="number">7</span> ; i++)&#123;</span><br><span class="line">        la[i] = <span class="number">0</span>;</span><br><span class="line">        ra[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= mid )  la = <span class="built_in">rangeQuery</span>(rt&lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">    <span class="keyword">if</span>( r &gt; mid)    ra = <span class="built_in">rangeQuery</span>(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">    <span class="keyword">int</span> *ta = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">8</span>];</span><br><span class="line">    <span class="built_in">memset</span>(ta,<span class="number">0</span>,<span class="keyword">sizeof</span> ta);</span><br><span class="line">    <span class="built_in">push_up</span>(ta,la,ra);</span><br><span class="line">    <span class="keyword">return</span> ta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ; i++)&#123;</span><br><span class="line">        <span class="keyword">char</span> op;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>,x,y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//cout &lt;&lt; &quot;--&quot; &lt;&lt; x &lt;&lt; &#x27; &#x27; &lt;&lt; y &lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">int</span> *ans = <span class="built_in">rangeQuery</span>(<span class="number">1</span>,x,y);</span><br><span class="line">            cout &lt;&lt; ans[<span class="number">0</span>] &lt;&lt;endl;</span><br><span class="line"><span class="comment">//            cout &lt;&lt; &quot;-------&quot; &lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//            for(int i = 0 ; i &lt; 8 ; i ++)&#123;</span></span><br><span class="line"><span class="comment">//                cout &lt;&lt; ans[i] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            cout &lt;&lt; &quot;-------&quot; &lt;&lt;endl;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">8 9</span></span><br><span class="line"><span class="comment">C 1 20</span></span><br><span class="line"><span class="comment">C 2 30</span></span><br><span class="line"><span class="comment">C 6 24</span></span><br><span class="line"><span class="comment">Q 1 2</span></span><br><span class="line"><span class="comment">C 3 23</span></span><br><span class="line"><span class="comment">C 4 43</span></span><br><span class="line"><span class="comment">C 5 90</span></span><br><span class="line"><span class="comment">C 7 53</span></span><br><span class="line"><span class="comment">C 8 12</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="区间更新"><a href="#区间更新" class="headerlink" title="区间更新"></a>区间更新</h2><h3 id="一个简单的整数问题2"><a href="#一个简单的整数问题2" class="headerlink" title="一个简单的整数问题2"></a><a href="https://www.acwing.com/problem/content/description/244/">一个简单的整数问题2</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ll l ,r;</span><br><span class="line">    ll sum;</span><br><span class="line">    ll lazy;</span><br><span class="line">&#125;T[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T[rt].sum = T[rt &lt;&lt; <span class="number">1</span>].sum + T[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( T[rt].lazy != <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (T[rt].l + T[rt].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        T[rt &lt;&lt; <span class="number">1</span>].sum += T[rt].lazy * ( mid - T[rt].l + <span class="number">1</span>);</span><br><span class="line">        T[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].sum += T[rt].lazy * ( T[rt].r - mid) ;</span><br><span class="line">        T[rt &lt;&lt; <span class="number">1</span>].lazy += T[rt].lazy;</span><br><span class="line">        T[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].lazy += T[rt].lazy;</span><br><span class="line">        T[rt].lazy = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T[rt] = &#123;l,r,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>( l == r )&#123;</span><br><span class="line">        T[rt].sum = a[l];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(rt&lt;&lt;<span class="number">1</span>,l,mid),<span class="built_in">build</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rangeUpdate</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= T[rt].l &amp;&amp; r &gt;= T[rt].r )&#123;</span><br><span class="line">        T[rt].sum += val * (T[rt].r - T[rt].l + <span class="number">1</span>);</span><br><span class="line">        T[rt].lazy += val;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = ( T[rt].l + T[rt].r ) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">push_down</span>(rt);</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= mid ) <span class="built_in">rangeUpdate</span>( rt &lt;&lt; <span class="number">1</span>,l,r,val );</span><br><span class="line">    <span class="keyword">if</span>( r &gt; mid ) <span class="built_in">rangeUpdate</span>( rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>,l,r,val );</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">rangeQuery</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l ,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= T[rt].l &amp;&amp; r &gt;= T[rt].r )&#123;</span><br><span class="line">        <span class="keyword">return</span> T[rt].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid = ( T[rt].l + T[rt].r ) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">push_down</span>(rt);</span><br><span class="line"></span><br><span class="line">    ll son = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= mid ) son += <span class="built_in">rangeQuery</span>(rt &lt;&lt; <span class="number">1</span>,l,r);</span><br><span class="line">    <span class="keyword">if</span>( r &gt; mid ) son += <span class="built_in">rangeQuery</span>(rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">    <span class="keyword">return</span> son;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )  cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ; i++ )&#123;</span><br><span class="line">        <span class="keyword">char</span> op ;</span><br><span class="line">        ll x,y,z;</span><br><span class="line">        cin &gt;&gt; op;</span><br><span class="line">        <span class="keyword">if</span>( op == <span class="string">&#x27;C&#x27;</span> )&#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">            <span class="built_in">rangeUpdate</span>(<span class="number">1</span>,x,y,z);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">rangeQuery</span>(<span class="number">1</span>,x,y) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Mayor’s-posters-离散-线段树（因为数据的问题不知道是不是对的）"><a href="#Mayor’s-posters-离散-线段树（因为数据的问题不知道是不是对的）" class="headerlink" title="Mayor’s posters 离散+线段树（因为数据的问题不知道是不是对的）"></a><a href="https://vjudge.net/problem/POJ-2528">Mayor’s posters</a> 离散+线段树（因为数据的问题不知道是不是对的）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt &lt;&lt; 1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> tp;</span><br><span class="line">    <span class="keyword">int</span> lazy;</span><br><span class="line">&#125;T[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( T[rt].lazy != <span class="number">0</span> )&#123;</span><br><span class="line">        T[ls].tp = T[rt].lazy;</span><br><span class="line">        T[ls].lazy = T[rt].lazy;</span><br><span class="line">        T[rs].tp = T[rt].lazy;</span><br><span class="line">        T[rs].lazy = T[rt].lazy;</span><br><span class="line">        T[rt].lazy = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( T[ls].tp != T[rs].tp ) T[rt].tp = INF;</span><br><span class="line">    <span class="keyword">else</span>    T[rt].tp = T[ls].tp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T[rt] = &#123;l,r,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>( l == r )&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(ls,l,mid),<span class="built_in">build</span>(rs,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rangeUpdate</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= T[rt].l &amp;&amp; r &gt;= T[rt].r )&#123;</span><br><span class="line">        T[rt].tp = val;</span><br><span class="line">        T[rt].lazy = val;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (T[rt].l + T[rt].r) &gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">push_down</span>(rt);</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= mid ) <span class="built_in">rangeUpdate</span>( ls,l,r,val );</span><br><span class="line">    <span class="keyword">if</span>( r &gt; mid ) <span class="built_in">rangeUpdate</span>( rs,l,r,val );</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">getTpye</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( T[rt].l == T[rt].r &amp;&amp; T[rt].l == pos )&#123;</span><br><span class="line">        <span class="keyword">return</span> T[rt].tp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = ( T[rt].l + T[rt].r ) &gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> son = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">push_down</span>(rt);</span><br><span class="line">    <span class="keyword">if</span>(pos &lt;= mid)  son = <span class="built_in">getTpye</span>( ls,pos );</span><br><span class="line">    <span class="keyword">else</span> son = <span class="built_in">getTpye</span>(rs,pos);</span><br><span class="line">    <span class="keyword">return</span> son;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">///离散化</span></span><br><span class="line">        vector&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; <span class="built_in">a</span>(n);</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i ++)&#123;</span><br><span class="line">            cin &gt;&gt; a[i].first &gt;&gt; a[i].second;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(a[i].first);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(a[i].second);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line">        ans.<span class="built_in">erase</span>( <span class="built_in">unique</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>()),ans.<span class="built_in">end</span>() );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> len = ans.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; len; i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( ans[i] - ans[i<span class="number">-1</span>] &gt; <span class="number">1</span> )&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>( ans[i<span class="number">-1</span>] + <span class="number">1</span> );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">//        for(int i = 0 ; i &lt; ans.size() ; i++ )&#123;</span></span><br><span class="line"><span class="comment">//            cout &lt;&lt; ans[i] &lt;&lt; &quot; \n&quot;[i == ans.size()];</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,ans.<span class="built_in">size</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">/// 贴海报</span></span><br><span class="line">        len = a.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span> ; i &lt; len ; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x = <span class="built_in">lower_bound</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>() , a[i].first) - ans.<span class="built_in">begin</span>() + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> y = <span class="built_in">lower_bound</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>() , a[i].second) - ans.<span class="built_in">begin</span>() + <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">rangeUpdate</span>( <span class="number">1</span>,x,y,i+<span class="number">1</span> );</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout &lt;&lt;endl;</span></span><br><span class="line">        len = ans.<span class="built_in">size</span>();</span><br><span class="line">        set&lt;<span class="keyword">int</span>&gt; se;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= len ; i++ )&#123;</span><br><span class="line">            <span class="keyword">int</span> te = <span class="built_in">getTpye</span>(<span class="number">1</span>,i);</span><br><span class="line"></span><br><span class="line">            se.<span class="built_in">insert</span>( te );</span><br><span class="line">        &#125;</span><br><span class="line">        se.<span class="built_in">erase</span>(<span class="number">0</span>);</span><br><span class="line">        cout &lt;&lt;se.<span class="built_in">size</span>() &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Can-you-answer-these-queries"><a href="#Can-you-answer-these-queries" class="headerlink" title="Can you answer these queries?"></a><a href="https://vjudge.net/problem/HDU-4027">Can you answer these queries?</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line">ll A[N];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ll l,r;</span><br><span class="line">    ll sum;</span><br><span class="line">&#125;tree[N*<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">( ll rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[rt].sum = tree[rt&lt;&lt; <span class="number">1</span>].sum + tree[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">( ll rt, ll l, ll r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[rt].l = l ,tree[rt].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">        tree[rt].sum = A[r];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ll mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">build</span>(rt &lt;&lt; <span class="number">1</span>,l ,mid);</span><br><span class="line">        <span class="built_in">build</span>(rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>,mid +<span class="number">1</span> ,r);</span><br><span class="line">        <span class="built_in">push_up</span>(rt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( tree[rt].l == tree[rt].r)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[rt].sum = (ll)<span class="built_in">sqrt</span>( (<span class="keyword">double</span>)tree[rt].sum );</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= tree[rt].l &amp;&amp; r &gt;= tree[rt].r &amp;&amp; tree[rt].sum == tree[rt].r - tree[rt].l + <span class="number">1</span> ) <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    ll mid = ( tree[rt].l + tree[rt].r ) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= mid )  <span class="built_in">Update</span>(rt &lt;&lt; <span class="number">1</span>,l ,r);</span><br><span class="line">    <span class="keyword">if</span>( r &gt; mid )   <span class="built_in">Update</span>( rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>,l,r );</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">Query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= tree[rt].l &amp;&amp; r &gt;= tree[rt].r  )   <span class="keyword">return</span> tree[rt].sum;</span><br><span class="line">    <span class="keyword">int</span> mid = (tree[rt].l + tree[rt].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= mid ) res += <span class="built_in">Query</span>(rt &lt;&lt; <span class="number">1</span>,l , r);</span><br><span class="line">    <span class="keyword">if</span>( r &gt; mid )   res += <span class="built_in">Query</span>(rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>,l ,r);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res ;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; cnt++  &lt;&lt;<span class="string">&#x27;:&#x27;</span> &lt;&lt;endl;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)    cin &gt;&gt; A[i];</span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">        cin &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> cmd,x,y;</span><br><span class="line">            cin &gt;&gt; cmd &gt;&gt;x &gt;&gt;y;</span><br><span class="line">            <span class="keyword">if</span>( x &gt; y) <span class="built_in">swap</span>(x,y);</span><br><span class="line">            <span class="keyword">if</span>( cmd == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="built_in">Query</span>(<span class="number">1</span> ,x,y) &lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Update</span>(<span class="number">1</span>,x,y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="A-Simple-Problem-with-Integers-POJ-3468"><a href="#A-Simple-Problem-with-Integers-POJ-3468" class="headerlink" title="A Simple Problem with Integers - POJ 3468"></a><a href="https://vjudge.net/problem/POJ-3468">A Simple Problem with Integers - POJ 3468</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### [Balanced Lineup](https://vjudge.net/problem/POJ-3264)</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 50005;</span><br><span class="line">int A[N];</span><br><span class="line">struct Node</span><br><span class="line">&#123;</span><br><span class="line">    int l,r;</span><br><span class="line">    int maxn,minn;</span><br><span class="line">&#125;tree[N*4];</span><br><span class="line"></span><br><span class="line">void push_up(int rt)</span><br><span class="line">&#123;</span><br><span class="line">    tree[rt].maxn = max( tree[rt &lt;&lt; 1].maxn,tree[rt &lt;&lt; 1|1].maxn );</span><br><span class="line">    tree[rt].minn = min( tree[rt &lt;&lt; 1].minn , tree[rt &lt;&lt; 1|1].minn );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void build(int rt,int l, int r)</span><br><span class="line">&#123;</span><br><span class="line">    tree[rt].l = l,tree[rt].r = r;</span><br><span class="line">    if(l == r)</span><br><span class="line">        tree[rt].maxn = tree[rt].minn = A[r];</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        int mid = (l + r) &gt;&gt; 1;</span><br><span class="line">        build( rt &lt;&lt; 1, l , mid );</span><br><span class="line">        build( rt &lt;&lt; 1|1,mid + 1, r );</span><br><span class="line">        push_up(rt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pair&lt;int,int&gt; Query(int rt,int l ,int r)</span><br><span class="line">&#123;</span><br><span class="line">    if( l &lt;= tree[rt].l &amp;&amp; r &gt;= tree[rt].r )</span><br><span class="line">    &#123;</span><br><span class="line">        return &#123; tree[rt].maxn,tree[rt].minn &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    else if( tree[rt].l &gt; r || tree[rt].r &lt; l ) return &#123;0,20000000&#125;;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        int mid = (tree[rt].l + tree[rt].r) &gt;&gt; 1;</span><br><span class="line">        pair&lt;int,int&gt; l_son,r_son;</span><br><span class="line">        l_son = r_son = &#123;0,20000000&#125;;</span><br><span class="line">        if( l &lt;= mid )  l_son = Query(rt &lt;&lt; 1, l ,r);</span><br><span class="line">        if( r &gt; mid )  r_son = Query(rt &lt;&lt; 1|1, l ,r);</span><br><span class="line">        return &#123; max( l_son.first,r_son.first ) , min(l_son.second,r_son.second ) &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    ios::sync_with_stdio(false);</span><br><span class="line">    cin.tie(0);</span><br><span class="line"></span><br><span class="line">    int n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt;m;</span><br><span class="line">    for(int i = 1 ; i &lt;= n ; i++)   cin &gt;&gt;A[i];</span><br><span class="line"></span><br><span class="line">    build(1,1,n);</span><br><span class="line"></span><br><span class="line">    for(int i = 0 ; i&lt; m ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        int x,y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"></span><br><span class="line">        pair&lt;int,int&gt; te = Query(1,x,y);</span><br><span class="line">        cout &lt;&lt; (int)(te.first - te.second) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="扫描线"><a href="#扫描线" class="headerlink" title="扫描线"></a><a href="https://blog.csdn.net/xianpingping/article/details/83032798?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161502182716780266258014%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161502182716780266258014&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-83032798.first_rank_v2_pc_rank_v29_10&utm_term=%E6%89%AB%E6%8F%8F%E7%BA%BF">扫描线</a></h3><hr><h3 id="245-你能回答这些问题吗-AcWing题库"><a href="#245-你能回答这些问题吗-AcWing题库" class="headerlink" title="245. 你能回答这些问题吗 - AcWing题库"></a><a href="https://www.acwing.com/problem/content/description/246/">245. 你能回答这些问题吗 - AcWing题库</a></h3><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line">ll a[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ll l,r,sum,lm,rm,ma;</span><br><span class="line">&#125;t[N*<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>*<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t[rt].lm = <span class="built_in">max</span>( t[rt &lt;&lt; <span class="number">1</span>].lm ,t[rt&lt;&lt; <span class="number">1</span>].sum + t[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].lm );</span><br><span class="line">    t[rt].rm = <span class="built_in">max</span>( t[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].rm , t[rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum + t[rt &lt;&lt;<span class="number">1</span>].rm );</span><br><span class="line">    t[rt].ma= <span class="built_in">max</span>( <span class="built_in">max</span>( t[rt &lt;&lt; <span class="number">1</span>].ma,t[rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ma ),t[rt&lt;&lt; <span class="number">1</span>].rm +t[rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>].lm );</span><br><span class="line">    t[rt].sum = t[rt &lt;&lt;<span class="number">1</span>].sum + t[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t[rt] = &#123;l,r,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        t[rt].sum = t[rt].lm = t[rt].rm = t[rt].ma = a[r];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = l +r &gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(rt &lt;&lt; <span class="number">1</span>,l,mid),<span class="built_in">build</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid + <span class="number">1</span>,r);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">( <span class="keyword">int</span> rt,<span class="keyword">int</span> loc ,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( t[rt].l == t[rt].r &amp;&amp; t[rt].l == loc )&#123;</span><br><span class="line">        t[rt].sum = t[rt].lm = t[rt].rm = t[rt].ma= val;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = t[rt].l +t[rt].r &gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>( loc &lt;= mid ) <span class="built_in">update</span>( rt &lt;&lt;<span class="number">1</span>,loc,val );</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,loc ,val);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">rangeQuery</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= t[rt].l &amp;&amp; r &gt;= t[rt].r)&#123;</span><br><span class="line">        <span class="keyword">return</span> t[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = t[rt].l + t[rt].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    node l_son ,r_son, son;</span><br><span class="line">    son.sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= mid &amp;&amp; r &gt; mid )&#123;</span><br><span class="line">        l_son = <span class="built_in">rangeQuery</span>(rt&lt;&lt;<span class="number">1</span> , l , r);</span><br><span class="line">        r_son = <span class="built_in">rangeQuery</span>( rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span> ,l,r);</span><br><span class="line">        son.sum += l_son.sum + r_son.sum;</span><br><span class="line">        son.ma = <span class="built_in">max</span>( <span class="built_in">max</span>( l_son.ma ,r_son.ma ), l_son.rm + r_son.lm );</span><br><span class="line">        son.lm = <span class="built_in">max</span>( l_son.lm , l_son.sum + r_son.lm );</span><br><span class="line">        son.rm = <span class="built_in">max</span>( r_son.rm , r_son.sum + l_son.rm );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( l &lt;= mid )&#123;</span><br><span class="line">        l_son = <span class="built_in">rangeQuery</span>(rt&lt;&lt;<span class="number">1</span> , l , r);</span><br><span class="line">        son.sum += l_son.sum;</span><br><span class="line">        son = l_son;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( r &gt; mid)&#123;</span><br><span class="line">        r_son = <span class="built_in">rangeQuery</span>( rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span> ,l,r);</span><br><span class="line">        son.sum += r_son.sum;</span><br><span class="line">        son = r_son;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">// cout &lt;&lt; l_son.ms &lt;&lt; &#x27; &#x27; &lt;&lt; r_son.ms &lt;&lt; &#x27; &#x27;&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">return</span> son;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> op,x,y;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt;x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span>( op == <span class="number">1</span> )&#123;  <span class="comment">///q</span></span><br><span class="line">            <span class="keyword">if</span>( x &gt; y ) <span class="built_in">swap</span>(x,y);</span><br><span class="line">            <span class="keyword">auto</span> it = <span class="built_in">rangeQuery</span>(<span class="number">1</span>,x,y);</span><br><span class="line">            cout &lt;&lt; it.ma &lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;          <span class="comment">///add</span></span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>,x,y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    for(int i = 1 ; i &lt; 20;  i++)&#123;</span></span><br><span class="line"><span class="comment">//        cout &lt;&lt; t[i].ma &lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6278-数列分块入门-2"><a href="#6278-数列分块入门-2" class="headerlink" title="#6278. 数列分块入门 2 "></a><a href="https://loj.ac/p/6278"><strong>#6278. 数列分块入门 2</strong> </a></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls (rt&lt;&lt;1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs (rt&lt;&lt;1|1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Mid ((T[rt].l + T[rt].r)&gt;&gt;1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> L ( T[rt].l)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R (T[rt].r)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">file</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> ONLINE_JUDGE</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        <span class="built_in">freopen</span>( <span class="string">&quot;d:/workProgram/test.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin );</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> ma,mi;</span><br><span class="line">    <span class="keyword">int</span> lazy ;</span><br><span class="line">&#125;T[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T[rt].ma = <span class="built_in">max</span>( T[ls].ma, T[rs].ma );</span><br><span class="line">    T[rt].mi = <span class="built_in">min</span>( T[ls].mi , T[rs].mi );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( T[rt].lazy != <span class="number">0</span> )&#123;</span><br><span class="line">        T[ls].lazy += T[rt].lazy;</span><br><span class="line">        T[rs].lazy += T[rt].lazy;</span><br><span class="line">        T[ls].ma += T[rt].lazy;</span><br><span class="line">        T[rs].ma += T[rt].lazy;</span><br><span class="line">        T[ls].mi += T[rt].lazy;</span><br><span class="line">        T[rs].mi += T[rt].lazy;</span><br><span class="line">        T[rt].lazy = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l ,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T[rt] = &#123;l,r,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>( l == r)&#123;</span><br><span class="line">        T[rt].ma = T[rt].mi = a[l];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(ls,l,mid),<span class="built_in">build</span>(rs,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="built_in">up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rangeUpdate</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= L &amp;&amp; r &gt;= R  )&#123;</span><br><span class="line">        T[rt].ma += val;</span><br><span class="line">        T[rt].mi += val;</span><br><span class="line">        T[rt].lazy += val;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">down</span>(rt);</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= Mid ) <span class="built_in">rangeUpdate</span>( ls, l,r,val );</span><br><span class="line">    <span class="keyword">if</span>( r &gt; Mid ) <span class="built_in">rangeUpdate</span>(rs,l,r,val);</span><br><span class="line">    <span class="built_in">up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rangeQuery</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( T[rt].mi &gt;= x ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= L  &amp;&amp; r &gt;= R &amp;&amp; T[rt].ma &lt; x )&#123;</span><br><span class="line">        <span class="keyword">return</span> T[rt].r - T[rt].l + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">down</span>(rt);</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= Mid ) cnt += <span class="built_in">rangeQuery</span>(ls,l,r,x);</span><br><span class="line">    <span class="keyword">if</span>( r &gt; Mid ) cnt += <span class="built_in">rangeQuery</span>(rs,l,r,x);</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="comment">//file();</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> op,l,r,x;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r &gt;&gt;x;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; &quot;--&quot;&lt;&lt; i &lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>( op == <span class="number">0</span> )&#123;</span><br><span class="line">            <span class="built_in">rangeUpdate</span>(<span class="number">1</span>,l,r,x);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout &lt;&lt;<span class="built_in">rangeQuery</span>(<span class="number">1</span>,l,r,x*x) &lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="9-可持续化线段树（主席树）"><a href="#9-可持续化线段树（主席树）" class="headerlink" title="9____可持续化线段树（主席树）"></a>9____可持续化线段树（主席树）</h1><hr><h2 id="权值线段树"><a href="#权值线段树" class="headerlink" title="权值线段树"></a>权值线段树</h2><h3 id="Find-the-answer"><a href="#Find-the-answer" class="headerlink" title="_Find the answer"></a><a href="https://vjudge.net/problem/HDU-6609">_Find the answer</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll ca,n,m;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l ,r;</span><br><span class="line">    ll val,time;</span><br><span class="line">&#125;t[N * <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t[rt].val = t[rt &lt;&lt; <span class="number">1</span>].val + t[rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val;</span><br><span class="line">    t[rt].time = t[rt &lt;&lt;<span class="number">1</span>].time + t[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(ll rt,ll l, ll r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t[rt] = &#123;l,r,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>(l == r)  <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">    ll mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(rt &lt;&lt;<span class="number">1</span>,l,mid),<span class="built_in">build</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+ <span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(ll rt,ll l,ll r,ll val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l &lt;= t[rt].l &amp;&amp; r &gt;= t[rt].r )</span><br><span class="line">    &#123;</span><br><span class="line">        t[rt].val += val;</span><br><span class="line">        t[rt].time ++;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ll mid = (t[rt].l + t[rt].r) &gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l &lt;= mid) <span class="built_in">update</span>(rt &lt;&lt;<span class="number">1</span>,l,r,val);</span><br><span class="line">    <span class="keyword">if</span>(r &gt; mid  ) <span class="built_in">update</span>(rt &lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r,val);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///val为需要删除的元素的和，ans为删除的数量</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(ll rt,ll val,ll &amp;ans)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( t[rt].l == t[rt].r )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( val % b[ t[rt].l ] == <span class="number">0</span> ) ans += val / b[ t[rt].l ];</span><br><span class="line">        <span class="keyword">else</span> ans += val / b[ t[rt].l ] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///如果右边的（大的集合）大于val，就继续向右边找</span></span><br><span class="line">    <span class="keyword">if</span>( t[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].val &gt;= val ) <span class="built_in">query</span>(rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>,val,ans);</span><br><span class="line">    <span class="keyword">else</span><span class="comment">///如果右边的数小于了，那么就把右边的数都删了，然后再向左边找</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans += t[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].time;</span><br><span class="line">        val -= t[rt &lt;&lt; <span class="number">1</span>|<span class="number">1</span>].val;</span><br><span class="line">        <span class="built_in">query</span>( rt &lt;&lt; <span class="number">1</span>,val,ans );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; ca;</span><br><span class="line">    <span class="keyword">while</span>(ca--)</span><br><span class="line">    &#123;</span><br><span class="line">        ll sum = <span class="number">0</span>;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++) cin &gt;&gt; a[i], b[i] = a[i];</span><br><span class="line">        <span class="comment">///去重</span></span><br><span class="line">        <span class="comment">///去重建的树，是重小大大开始建树的</span></span><br><span class="line">        <span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">        ll len = <span class="built_in">unique</span>(b +<span class="number">1</span> ,b +<span class="number">1</span>+n) - (b + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,len);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum += a[i];    <span class="comment">///前缀和</span></span><br><span class="line">            <span class="keyword">if</span>( i == <span class="number">0</span> )cout &lt;&lt; <span class="string">&quot;0 &quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ll ans = <span class="number">0</span>; <span class="comment">///最后去除了几个数</span></span><br><span class="line">                <span class="keyword">if</span>( sum &lt;= m)   ans = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">query</span>(<span class="number">1</span>,sum - m , ans);</span><br><span class="line"></span><br><span class="line">                cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ll loc = <span class="built_in">lower_bound</span>(b +<span class="number">1</span> , b+<span class="number">1</span>+len ,a[i]) - b;</span><br><span class="line">            <span class="comment">///插入</span></span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>,loc,loc,a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-可持续化字典树"><a href="#10-可持续化字典树" class="headerlink" title="10____可持续化字典树"></a>10____可持续化字典树</h1><hr><h1 id="11-Tire树"><a href="#11-Tire树" class="headerlink" title="11____Tire树"></a>11____Tire树</h1><hr><h3 id="Phone-List-wa"><a href="#Phone-List-wa" class="headerlink" title="Phone List(wa)"></a><a href="https://vjudge.net/problem/POJ-3630">Phone List</a>(wa)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">11000</span>;</span><br><span class="line"><span class="keyword">int</span> son[N][<span class="number">26</span>],idx,cnt[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Insert</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> len = s.<span class="built_in">length</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len ;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>( cnt[p] != <span class="number">0</span> ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>( !son[p][u] ) son[p][u] = ++idx;</span><br><span class="line">        p = son[p][u];</span><br><span class="line">    &#125;</span><br><span class="line">    cnt[p]++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span> son);</span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> cnt);</span><br><span class="line">        idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i &lt; n ;i++ )</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            cin &gt;&gt; s;</span><br><span class="line">            <span class="keyword">if</span>( flag )</span><br><span class="line">                flag = <span class="built_in">Insert</span>(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( flag ) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="统计难题"><a href="#统计难题" class="headerlink" title="统计难题"></a><a href="https://vjudge.net/problem/HDU-1251">统计难题</a></h3><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000006</span>;</span><br><span class="line"><span class="keyword">int</span> son[N][<span class="number">26</span>],cnt[N],idx = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> *str,<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; len ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = str[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>( !son[p][u] ) son[p][u] = ++idx;</span><br><span class="line">        p = son[p][u];</span><br><span class="line">        cnt[p]++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>,u;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; len ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; str[i] &lt;&lt; &#x27; &#x27; &lt;&lt;c</span></span><br><span class="line">        u = str[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>( !son[p][u] ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        p = son[p][u];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt[p];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">12</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">gets</span>(s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> len =<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">if</span>( len == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Insert</span>(s,len);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">gets</span>(s) )</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">Query</span>(s) &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最大异或对"><a href="#最大异或对" class="headerlink" title="最大异或对"></a><a href="https://www.acwing.com/problem/content/145/">最大异或对</a></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> son[N*<span class="number">31</span>][<span class="number">2</span>],a[N],idx = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">30</span> ; i &gt;= <span class="number">0</span> ; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = x &gt;&gt; i &amp; <span class="number">1</span>; <span class="comment">//取x的第i位</span></span><br><span class="line">        <span class="keyword">if</span>( !son[p][u] ) son[p][u] = ++idx;</span><br><span class="line">        p = son[p][u];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>, ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">30</span>; i &gt;= <span class="number">0</span> ; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = x &gt;&gt; i &amp; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>( !son[p][!u] )</span><br><span class="line">        &#123;</span><br><span class="line">            p = son[p][u];</span><br><span class="line">            ret = ret * <span class="number">2</span> + u;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p = son[p][!u];</span><br><span class="line">            ret = ret * <span class="number">2</span> + !u;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; ret &lt;&lt; endl;</span></span><br><span class="line">    ret = ret ^ x;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> te ;</span><br><span class="line">        cin &gt;&gt; te;</span><br><span class="line">        <span class="built_in">Insert</span>(te);</span><br><span class="line">        maxn = <span class="built_in">max</span>(maxn,<span class="built_in">Query</span>(te) );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; maxn &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="12-DP"><a href="#12-DP" class="headerlink" title="12_DP"></a>12_DP</h1><h3 id="902-最短编辑距离"><a href="#902-最短编辑距离" class="headerlink" title="902. 最短编辑距离"></a><a href="https://www.acwing.com/problem/content/904/">902. 最短编辑距离</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 1e4+10;</span><br><span class="line">char a[N],b[N];</span><br><span class="line">int dp[N][N];</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    ios::sync_with_stdio(false);</span><br><span class="line">    cin.tie(0);</span><br><span class="line">    cout.tie(0);</span><br><span class="line">    int n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; a + 1 &gt;&gt; m &gt;&gt; b + 1;</span><br><span class="line">    for(int i = 1 ; i &lt;= n ; i++) dp[i][0] = i;</span><br><span class="line">    for(int j = 1 ; j &lt;= m ; j++) dp[0][j] = j;</span><br><span class="line">    ///</span><br><span class="line">    for(int i = 1 ;  i &lt;= n ; i++)&#123;</span><br><span class="line">        for(int j = 1; j &lt;= m ; j++)&#123;</span><br><span class="line">            dp[i][j] = min(dp[i-1][j] + 1, dp[i][j-1] + 1);</span><br><span class="line">            dp[i][j] = min( dp[i][j] , dp[i-1][j-1] + (a[i] != b[j]) );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt;dp[n][m] &lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://vjudge.net/problem/">传球游戏</a></p></blockquote><blockquote><p><a href="https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-203">滑雪</a></p></blockquote><h1 id="13-搜索"><a href="#13-搜索" class="headerlink" title="13_搜索"></a>13_搜索</h1><p><a href="https://blog.csdn.net/reverie_mjp/article/details/53026242?ops_request_misc=%7B%22request_id%22:%22162683268716780262514623%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=162683268716780262514623&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-53026242.pc_search_result_control_group&utm_term=BFS%E7%BB%8F%E5%85%B8%E9%A2%98%E7%9B%AE&spm=1018.2226.3001.4187">(4条消息) BFS广搜题目【经典训练题】_reverie_mjp的博客-CSDN博客</a></p><p>[(4条消息) <a href="https://blog.csdn.net/weixin_44339734/article/details/104463025">kuangbin带你飞]专题一 做题顺序与题解 【简单搜索】_指弹键盘哼民谣-CSDN博客_kuangbin带你飞做题顺序</a></p><h4 id="I-Penguins-2021牛客暑期多校训练营2-DFS路径输出"><a href="#I-Penguins-2021牛客暑期多校训练营2-DFS路径输出" class="headerlink" title="**I-Penguins_2021牛客暑期多校训练营2 ** DFS路径输出"></a><a href="https://ac.nowcoder.com/acm/contest/11253/I">**I-Penguins_2021牛客暑期多校训练营2 ** DFS路径输出</a></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">30</span>][<span class="number">50</span>]; <span class="comment">///读入的地图</span></span><br><span class="line">pair&lt; pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;,pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; lst[<span class="number">21</span>][<span class="number">21</span>][<span class="number">21</span>][<span class="number">21</span>];</span><br><span class="line">queue&lt; pair&lt; pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;,pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; &gt; q; <span class="comment">///两个人走到那个位置了</span></span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">21</span>][<span class="number">21</span>][<span class="number">21</span>][<span class="number">21</span>];    <span class="comment">///判重</span></span><br><span class="line"><span class="keyword">char</span> op[<span class="number">21</span>][<span class="number">21</span>][<span class="number">21</span>][<span class="number">21</span>];    <span class="comment">///路径记录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> d[<span class="number">4</span>][<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;  <span class="comment">///两个人所有的步数情况（镜像）</span></span><br><span class="line"><span class="keyword">char</span> o[<span class="number">4</span>]=&#123;<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;L&#x27;</span>,<span class="string">&#x27;R&#x27;</span>,<span class="string">&#x27;U&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pass</span><span class="params">(pair&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; ,pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x1 = x.first.first;</span><br><span class="line">    <span class="keyword">int</span> y1 = x.first.second;</span><br><span class="line">    <span class="keyword">int</span> x2 = x.second.first;</span><br><span class="line">    <span class="keyword">int</span> y2 = x.second.second;</span><br><span class="line"></span><br><span class="line">    s[x1][y1] = s[x2][y2+<span class="number">21</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>( x1 == <span class="number">20</span> &amp;&amp; y1 == <span class="number">20</span> &amp;&amp;  x2 == <span class="number">20</span> &amp;&amp; y2 == <span class="number">1</span> )<span class="keyword">return</span> ;</span><br><span class="line">    <span class="built_in">pass</span>(lst[x1][y1][x2][y2]);</span><br><span class="line">    <span class="comment">///回溯的时候再输出 , nb</span></span><br><span class="line">    cout &lt;&lt; ( op[x1][y1][x2][y2] );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">20</span>; i++)&#123;</span><br><span class="line">        cin &gt;&gt; s[i]+<span class="number">1</span> &gt;&gt; s[i]+<span class="number">22</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    q.<span class="built_in">push</span>( &#123; &#123;<span class="number">20</span>,<span class="number">20</span>&#125;,&#123;<span class="number">20</span>,<span class="number">1</span>&#125; &#125; );</span><br><span class="line">    dis[<span class="number">20</span>][<span class="number">20</span>][<span class="number">20</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>() )&#123;</span><br><span class="line">        <span class="keyword">int</span> x1 = q.<span class="built_in">front</span>().first.first;</span><br><span class="line">        <span class="keyword">int</span> y1 = q.<span class="built_in">front</span>().first.second;</span><br><span class="line">        <span class="keyword">int</span> x2 = q.<span class="built_in">front</span>().second.first;</span><br><span class="line">        <span class="keyword">int</span> y2 = q.<span class="built_in">front</span>().second.second;</span><br><span class="line"></span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">4</span> ; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> nx1 = x1 + d[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> ny1 = y1 + d[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> nx2 = x2 + d[i][<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">int</span> ny2 = y2 + d[i][<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( nx1 &lt; <span class="number">1</span> || nx1 &gt; <span class="number">20</span> || ny1 &lt; <span class="number">1</span> || ny1 &gt;<span class="number">20</span> || s[nx1][ny1] == <span class="string">&#x27;#&#x27;</span> ) nx1 = x1,ny1=y1;</span><br><span class="line">            <span class="keyword">if</span>( nx2 &lt; <span class="number">1</span> || nx2 &gt; <span class="number">20</span> || ny2 &lt; <span class="number">1</span> || ny2 &gt; <span class="number">20</span> || s[nx2][ny2 + <span class="number">21</span>] == <span class="string">&#x27;#&#x27;</span> ) nx2 = x2,ny2 = y2;</span><br><span class="line"></span><br><span class="line">            <span class="comment">///越界，或者找过了</span></span><br><span class="line">            <span class="keyword">if</span>( dis[nx1][ny1][nx2][ny2] ) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            dis[nx1][ny1][nx2][ny2] = dis[x1][y1][x2][y2] + <span class="number">1</span>;</span><br><span class="line">            op[nx1][ny1][nx2][ny2] = o[i];</span><br><span class="line">            lst[nx1][ny1][nx2][ny2] = &#123; &#123;x1,y1&#125;,&#123;x2,y2&#125; &#125;;</span><br><span class="line">            q.<span class="built_in">push</span>( &#123;&#123;nx1,ny1&#125;,&#123;nx2,ny2&#125;&#125; );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; dis[<span class="number">1</span>][<span class="number">20</span>][<span class="number">1</span>][<span class="number">1</span>]<span class="number">-1</span> &lt;&lt;endl;</span><br><span class="line">    <span class="built_in">pass</span>( &#123;&#123;<span class="number">1</span>,<span class="number">20</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>&#125;&#125; );</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;i++)</span><br><span class="line">        s[i][<span class="number">21</span>]=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">20</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">41</span> ; j ++ )&#123;</span><br><span class="line">            cout &lt;&lt; s[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="POJ1175-Starry-Night"><a href="#POJ1175-Starry-Night" class="headerlink" title="POJ1175____Starry Night"></a>POJ1175____<strong>Starry Night</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">#### 八数码_A*</span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line"></span><br><span class="line">#include &lt;map&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">string sta,seq;</span><br><span class="line">string en = &quot;12345678x&quot;;</span><br><span class="line"></span><br><span class="line">map&lt;string,int&gt; dist; ///判重</span><br><span class="line">map&lt;string,pair&lt;string,char&gt; &gt; cost;   ///路径记录</span><br><span class="line">priority_queue&lt;pair&lt;int,string&gt; ,vector&lt;pair&lt;int,string&gt; &gt;,greater&lt;pair&lt;int,string&gt; &gt; &gt; q;      ///将启发函数数值小的排前面</span><br><span class="line"></span><br><span class="line">int dx[] = &#123;1,0,0,-1&#125;;</span><br><span class="line">int dy[] = &#123;0,-1,1,0&#125;;</span><br><span class="line">char op[] = &#123;&#x27;d&#x27;,&#x27;l&#x27;,&#x27;r&#x27;,&#x27;u&#x27;&#125;;</span><br><span class="line"></span><br><span class="line">int get(string s)</span><br><span class="line">&#123;</span><br><span class="line">    int res = 0;</span><br><span class="line">    for(int i = 0 ; i &lt; 9 ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(s[i] != &#x27;x&#x27;)</span><br><span class="line">        &#123;</span><br><span class="line">            int t = s[i] - &#x27;1&#x27;;</span><br><span class="line">            res += abs(t / 3 - i / 3) + abs(t % 3 - i % 3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void bfs(string s)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    q.push( make_pair(get(s),s) );</span><br><span class="line">    dist[s] = 1;</span><br><span class="line"></span><br><span class="line">    while(!q.empty())&#123;</span><br><span class="line"></span><br><span class="line">        pair&lt;int,string&gt;  no = q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        string from = no.second;</span><br><span class="line">        string state = from;</span><br><span class="line">        if( no.second == en )&#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        //cout &lt;&lt; no.first &lt;&lt; endl;</span><br><span class="line">        int loc = state.find(&#x27;x&#x27;);</span><br><span class="line">        int k = dist[state];</span><br><span class="line">        int x = loc / 3;</span><br><span class="line">        int y = loc % 3;</span><br><span class="line">        for(int i = 0 ; i &lt; 4;  i++)&#123;</span><br><span class="line">            int tx = x + dx[i] , ty = y + dy[i];</span><br><span class="line">            if(tx &lt; 3 &amp;&amp; ty &lt; 3 &amp;&amp; tx &gt;=0 &amp;&amp; ty &gt;=0)&#123;</span><br><span class="line">                swap( state[loc],state[tx*3 + ty] );</span><br><span class="line">                if( dist[state] == 0 || dist[state] &gt; k + 1 )&#123;</span><br><span class="line">                    dist[state] = k+1;</span><br><span class="line">                    q.push(make_pair(dist[from]+get(state),state) );</span><br><span class="line">                    cost[state] = make_pair(from,op[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                swap( state[loc],state[tx*3 + ty] );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if( dist[en] == 0)&#123;</span><br><span class="line">        cout &lt;&lt; &quot;unsolvable&quot; &lt;&lt;endl;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        string res=&quot;&quot;;</span><br><span class="line">        string te = en;</span><br><span class="line">        while( te != sta )&#123;</span><br><span class="line">            res +=cost[te].second;</span><br><span class="line">            te = cost[te].first;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        reverse(res.begin(),res.end());</span><br><span class="line">        cout &lt;&lt;res &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    ios::sync_with_stdio(false);</span><br><span class="line">    cin.tie(0);</span><br><span class="line">    cout.tie(0);</span><br><span class="line"></span><br><span class="line">    for(int i =0 ; i &lt; 9 ; i++)&#123;</span><br><span class="line">        char c;</span><br><span class="line">        cin &gt;&gt; c;</span><br><span class="line">        sta+=c;</span><br><span class="line">        if(c != &#x27;x&#x27;) seq += c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    int cnt = 0;</span><br><span class="line">    for(int i = 0 ; i &lt; 8 ; i ++)</span><br><span class="line">        for(int j = i + 1 ; j &lt; 8 ; j++)</span><br><span class="line">            if(seq[i] &gt; seq[j])</span><br><span class="line">                cnt++;</span><br><span class="line">    if(cnt % 2) puts(&quot;unsolvable&quot;);</span><br><span class="line">    else bfs(sta);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="14-数列分块"><a href="#14-数列分块" class="headerlink" title="14____数列分块"></a>14____数列分块</h1><h2 id="14-1-数列分块1（区间加法，单点查询）"><a href="#14-1-数列分块1（区间加法，单点查询）" class="headerlink" title="14.1____数列分块1（区间加法，单点查询）"></a>14.1____数列分块1（区间加法，单点查询）</h2><p><img src="https://i.loli.net/2021/08/03/URvfmePzVu9yWtE.png" alt="image-20210803104118041"></p><p><strong>题解：</strong></p><p>​    这个题就是数列分块的板子题，对区间做<em>区间修改</em>，<em>单点查询</em>，区间修改为区间加法，线段树同样可以做，但是代码就很复杂了，我们用 tag 来维护分块区间的相同和</p><p>​    在update的时候，如果在同一区间内，那么我们直接 $O(n)$​​​解决 ，如果不在的话，那么位于左端和右端的区间，我们都直接 $O(n)$​​​ 处理， 在中间的区间，我们直接同一加到 <code>tag</code> 上，这 <code>tag</code> 数组有点像 线段树的 <code>lazy</code>标记，但是不会 <code>push_down</code>，查询的时候，我们直接叠加上去就可以了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N],s[N],tag[N],len,id[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sid = id[l] , eid = id[r];</span><br><span class="line">    <span class="keyword">if</span>( sid == eid )&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = l ;i &lt;= r; i++)&#123;</span><br><span class="line">            a[i] += c, s[sid] += c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = l ; id[i] == sid ; i++) a[i] += c,s[ sid ] += c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = sid + <span class="number">1</span> ; i &lt; eid ; i++) tag[i] += c,s[ i ] += c * len;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = r ; id[i] == eid ; i--) a[i] += c,s[eid] += c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[x] + tag[ id[x] ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    len = <span class="built_in">sqrt</span>(n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        id[i] = (i - <span class="number">1</span>) / len + <span class="number">1</span>;</span><br><span class="line">        s[ id[i] ] += a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> op,x,y,z;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">        <span class="keyword">if</span>( op == <span class="number">0</span> )&#123;</span><br><span class="line">            <span class="built_in">add</span>(x,y,z);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query</span>(y) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-2-数列分块2"><a href="#14-2-数列分块2" class="headerlink" title="14.2____数列分块2"></a>14.2____数列分块2</h2><p> <img src="https://i.loli.net/2021/08/03/4vgT5fepIH1GXAl.png" alt="image-20210803104611858"></p><h1 id="好题："><a href="#好题：" class="headerlink" title="好题："></a>好题：</h1><h2 id="1-幂次方-递归"><a href="#1-幂次方-递归" class="headerlink" title="1____幂次方( 递归 )"></a>1____<a href="https://nanti.jisuanke.com/t/T2103">幂次方</a>( 递归 )</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">f</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> w = <span class="number">0</span>;</span><br><span class="line">    string s = <span class="string">&quot;&quot;</span> ; <span class="comment">///存最后的</span></span><br><span class="line">    string r = <span class="string">&quot;&quot;</span> ; <span class="comment">///每一步拆分出来的</span></span><br><span class="line">    string t = <span class="string">&quot;&quot;</span> ; <span class="comment">///运算符</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( x == <span class="number">0</span> ) <span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( x % <span class="number">2</span> == <span class="number">1</span> )&#123;<span class="comment">///如果是odd就执行</span></span><br><span class="line">            <span class="keyword">if</span>( w == <span class="number">1</span> ) r = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                r = <span class="string">&quot;2(&quot;</span> +<span class="built_in">f</span>(w) + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( s == <span class="string">&quot;&quot;</span> ) t ==<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> t = <span class="string">&quot;+&quot;</span>;</span><br><span class="line"></span><br><span class="line">            s = r + t +s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; s &lt;&lt; endl;</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; w&lt;&lt;&#x27; &#x27; &lt;&lt; x &lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(w++,x /= <span class="number">2</span>);  <span class="comment">///直到x==0才停止</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">f</span>(n) &lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-Z字形扫描-模拟蛇形矩阵"><a href="#2-Z字形扫描-模拟蛇形矩阵" class="headerlink" title="2____Z字形扫描 ( 模拟蛇形矩阵 )"></a>2____<a href="https://www.acwing.com/problem/content/3211/">Z字形扫描</a> ( 模拟蛇形矩阵 )</h2><hr><h2 id="3-蛇形矩阵（各种版本的）"><a href="#3-蛇形矩阵（各种版本的）" class="headerlink" title="3____蛇形矩阵（各种版本的）"></a>3____蛇形矩阵（各种版本的）</h2><hr><h1 id="AcWing寒假提高"><a href="#AcWing寒假提高" class="headerlink" title="AcWing寒假提高"></a>AcWing寒假提高</h1><hr><h2 id="1-AcWing-1402-星空之夜"><a href="#1-AcWing-1402-星空之夜" class="headerlink" title="1____AcWing 1402. 星空之夜"></a>1____AcWing 1402. <a href="https://www.acwing.com/problem/content/1404/">星空之夜</a></h2><hr><h2 id="Flood-Fill算法——见板子"><a href="#Flood-Fill算法——见板子" class="headerlink" title="Flood Fill算法——见板子"></a>Flood Fill算法——见板子</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题解&quot;&gt;&lt;a href=&quot;#题解&quot; class=&quot;headerlink&quot; title=&quot;题解&quot;&gt;&lt;/a&gt;题解&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.notion.so/dda8ee55f6754ec483c495ef2941d64d&quot;&gt;蓝桥杯准备</summary>
      
    
    
    
    <category term="ACM" scheme="https://hoppz.github.io/categories/ACM/"/>
    
    
    <category term="ACM" scheme="https://hoppz.github.io/tags/ACM/"/>
    
  </entry>
  
</feed>
